openapi: 3.0.3
info:
  title: Stirling PDF - Processing API
  description: >-
    API documentation for PDF processing operations including conversion,
    manipulation, security, and utilities.
  termsOfService: 'https://www.stirlingpdf.com/terms'
  contact:
    name: Stirling Software
    url: 'https://www.stirlingpdf.com'
    email: contact@stirlingpdf.com
  license:
    name: MIT
    url: >-
      https://raw.githubusercontent.com/Stirling-Tools/Stirling-PDF/refs/heads/main/LICENSE
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
    description: Generated server url
tags:
  - name: General
    description: >
      Core PDF processing operations for fundamental document manipulation
      workflows.


      This endpoint group provides essential PDF functionality that forms the
      foundation

      of most document processing workflows across various industries.


      Common use cases:

      • Document preparation for archival systems and content organization

      • File preparation for distribution, accessibility compliance, and batch
      processing

      • Document consolidation for reporting and legal compliance workflows


      Typical applications:

      • Content management, publishing workflows, and educational content
      distribution

      • Business process automation and archive management


      Target users: Content managers, document processors, and organizations
      requiring

      reliable foundational PDF manipulation capabilities.
  - name: Filter
    description: >
      Document content filtering and search operations for information discovery
      and organization.


      This endpoint group enables intelligent content discovery and organization
      within

      document collections for content-based processing and information
      extraction.


      Common use cases:

      • Legal discovery, research organization, and compliance auditing

      • Content moderation, academic research, and business intelligence

      • Quality assurance and content validation workflows


      Business applications:

      • Contract analysis, financial review, and healthcare records organization

      • Government processing, educational curation, and IP protection


      Workflow scenarios:

      • Large-scale processing, automated classification, and information
      extraction

      • Document preparation for further processing or analysis


      Target users: Legal professionals, researchers, compliance officers, and

      organizations requiring intelligent document content discovery and
      organization.
  - name: Convert
    description: >
      Document format transformation services for cross-platform compatibility
      and workflow integration.


      This endpoint group enables transformation between various formats,
      supporting

      diverse business workflows and system integrations for mixed document
      ecosystems.


      Common use cases:

      • Legacy system integration, document migration, and cross-platform
      sharing

      • Archive standardization, publishing preparation, and content adaptation

      • Accessibility compliance and mobile-friendly document preparation


      Business applications:

      • Enterprise content management, digital publishing, and educational
      platforms

      • Legal document processing, healthcare interoperability, and government
      standardization


      Integration scenarios:

      • API-driven pipelines, automated workflow preparation, and batch
      conversions

      • Real-time format adaptation for user requests


      Target users: System integrators, content managers, digital archivists,
      and

      organizations requiring flexible document format interoperability.
  - name: Pipeline
    description: >
      Automated document processing workflows for complex multi-stage business
      operations.


      This endpoint group enables organizations to create sophisticated document
      processing

      workflows that combine multiple operations into streamlined, repeatable
      processes.


      Common use cases:

      • Invoice processing, legal document review, and healthcare records
      standardization

      • Government processing, educational content preparation, and publishing
      automation

      • Contract lifecycle management and approval processes


      Business applications:

      • Automated compliance reporting, large-scale migration, and quality
      assurance

      • Archive preparation, content delivery, and document approval workflows


      Operational scenarios:

      • Scheduled batch processing and event-driven document processing

      • Multi-department coordination and business system integration


      Target users: Business process managers, IT automation specialists, and
      organizations

      requiring consistent, repeatable document processing workflows.
  - name: Analysis
    description: >
      Document analysis and information extraction services for content
      intelligence and insights.


      This endpoint group provides analytical capabilities to understand
      document structure,

      extract information, and generate insights from PDF content for automated
      processing.


      Common use cases:

      • Document inventory management and content audit for compliance
      verification

      • Quality assurance workflows and business intelligence analytics

      • Migration planning, accessibility evaluation, and document forensics


      Business applications:

      • Legal discovery, financial document review, and healthcare records
      analysis

      • Academic research, government processing, and publishing optimization


      Operational scenarios:

      • Large-scale profiling, migration assessment, and performance
      optimization

      • Automated quality control and content strategy development


      Target users: Data analysts, QA teams, administrators, and business
      intelligence

      professionals requiring detailed document insights.
  - name: Misc
    description: >
      Specialized utilities and supplementary tools for enhanced document
      processing workflows.


      This endpoint group provides utility operations that support core document
      processing

      tasks and address specific workflow needs in real-world scenarios.


      Common use cases:

      • Document optimization for bandwidth-limited environments and storage
      cost management

      • Document repair, content extraction, and validation for quality
      assurance

      • Accessibility improvement and custom processing for specialized needs


      Business applications:

      • Web publishing optimization, email attachment management, and archive
      efficiency

      • Mobile compatibility, print production, and legacy document recovery


      Operational scenarios:

      • Batch processing, quality control, and performance optimization

      • Troubleshooting and recovery of problematic documents


      Target users: System administrators, document specialists, and
      organizations requiring

      specialized document processing and optimization tools.
  - name: Security
    description: >
      Document security and protection services for confidential and sensitive
      content.


      This endpoint group provides essential security operations for
      organizations handling

      sensitive documents and materials requiring controlled access.


      Common use cases:

      • Legal confidentiality, healthcare privacy (HIPAA), and financial
      regulatory compliance

      • Government classified handling, corporate IP protection, and educational
      privacy (FERPA)

      • Contract security for business transactions


      Business applications:

      • Document authentication, confidential sharing, and secure archiving

      • Content watermarking, access control, and privacy protection through
      redaction


      Industry scenarios:

      • Legal discovery, medical records exchange, financial audit documentation

      • Enterprise policy enforcement and data governance


      Target users: Legal professionals, healthcare administrators, compliance
      officers,

      government agencies, and enterprises handling sensitive content.
paths:
  /api/v1/security/validate-signature:
    post:
      tags:
        - Security
      summary: Validate PDF Digital Signature
      description: >-
        Validates the digital signatures in a PDF file against default or custom
        certificates. Input:PDF Output:JSON Type:SISO
      operationId: validateSignature
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignatureValidationRequest'
      responses:
        '200':
          description: Analysis or data extraction completed successfully
          content:
            application/json:
              schema:
                type: object
                description: JSON object containing the requested data or analysis results
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/security/sanitize-pdf:
    post:
      tags:
        - Security
      summary: Sanitize a PDF file
      description: >-
        This endpoint processes a PDF file and removes specific elements based
        on the provided options. Input:PDF Output:PDF Type:SISO
      operationId: sanitizePDF
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SanitizePdfRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/security/remove-password:
    post:
      tags:
        - Security
      summary: Remove password from a PDF file
      description: >-
        This endpoint removes the password from a protected PDF file. Users need
        to provide the existing password. Input:PDF Output:PDF Type:SISO
      operationId: removePassword
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFPasswordRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/security/remove-cert-sign:
    post:
      tags:
        - Security
      summary: Remove digital signature from PDF
      description: >-
        This endpoint accepts a PDF file and returns the PDF file without the
        digital signature. Input:PDF, Output:PDF Type:SISO
      operationId: removeCertSignPDF
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/security/redact:
    post:
      tags:
        - Security
      summary: Redacts areas and pages in a PDF document
      description: >-
        This operation takes an input PDF file with a list of areas, page
        number(s)/range(s)/function(s) to redact. Input:PDF, Output:PDF,
        Type:SISO
      operationId: redactPdfManual
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ManualRedactPdfRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/security/get-info-on-pdf:
    post:
      tags:
        - Security
      summary: Summary here
      description: 'desc. Input:PDF Output:JSON Type:SISO'
      operationId: getPdfInfo
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: Analysis or data extraction completed successfully
          content:
            application/json:
              schema:
                type: object
                description: JSON object containing the requested data or analysis results
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/security/cert-sign:
    post:
      tags:
        - Security
      summary: Sign PDF with a Digital Certificate
      description: >-
        This endpoint accepts a PDF file, a digital certificate and related
        information to sign the PDF. It then returns the digitally signed PDF
        file. Input:PDF Output:PDF Type:SISO
      operationId: signPDFWithCert
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignPDFWithCertRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/security/auto-redact:
    post:
      tags:
        - Security
      summary: Redacts listOfText in a PDF document
      description: >-
        This operation takes an input PDF file and redacts the provided
        listOfText. Input:PDF, Output:PDF, Type:SISO
      operationId: redactPdfAuto
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RedactPdfRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/security/add-watermark:
    post:
      tags:
        - Security
      summary: Add watermark to a PDF file
      description: >-
        This endpoint adds a watermark to a given PDF file. Users can specify
        the watermark type (text or image), rotation, opacity, width spacer, and
        height spacer. Input:PDF Output:PDF Type:SISO
      operationId: addWatermark
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddWatermarkRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/security/add-password:
    post:
      tags:
        - Security
      summary: Add password to a PDF file
      description: >-
        This endpoint adds password protection to a PDF file. Users can specify
        a set of permissions that should be applied to the file. Input:PDF
        Output:PDF
      operationId: addPassword
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddPasswordRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/pipeline/handleData:
    post:
      tags:
        - Pipeline
      summary: Execute automated PDF processing pipeline
      description: >-
        This endpoint processes multiple PDF files through a configurable
        pipeline of operations. Users provide files and a JSON configuration
        defining the sequence of operations to perform. Input:PDF Output:PDF/ZIP
        Type:MIMO
      operationId: handleData
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HandleDataRequest'
      responses:
        '200':
          description: >-
            Files processed successfully. Returns single file or ZIP archive
            containing multiple files.
          content:
            application/pdf:
              schema:
                type: string
                description: Single PDF file result
                format: binary
            application/zip:
              schema:
                type: string
                description: ZIP archive containing multiple output files
                format: binary
            image/png:
              schema:
                type: string
                description: Single image file (PNG)
                format: binary
            image/jpeg:
              schema:
                type: string
                description: Single image file (JPEG)
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/update-metadata:
    post:
      tags:
        - Misc
      summary: Update metadata of a PDF file
      description: >-
        This endpoint allows you to update the metadata of a given PDF file. You
        can add, modify, or delete standard and custom metadata fields.
        Input:PDF Output:PDF Type:SISO
      operationId: metadata
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MetadataRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/unlock-pdf-forms:
    post:
      tags:
        - Misc
      summary: Remove read-only property from form fields
      description: >-
        Removing read-only property from form fields making them
        fillableInput:PDF, Output:PDF. Type:SISO
      operationId: unlockPDFForms
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/show-javascript:
    post:
      tags:
        - Misc
      summary: Grabs all JS from a PDF and returns a single JS file with all code
      description: 'desc. Input:PDF Output:JS Type:SISO'
      operationId: extractHeader
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: JavaScript extracted successfully from PDF
          content:
            text/plain:
              schema:
                type: string
                description: JavaScript code extracted from PDF
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/scanner-effect:
    post:
      tags:
        - Misc
      summary: Apply scanner effect to PDF
      description: >-
        Applies various effects to simulate a scanned document, including
        rotation, noise, and edge softening. Input:PDF Output:PDF Type:SISO
      operationId: scannerEffect
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScannerEffectRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/replace-invert-pdf:
    post:
      tags:
        - Misc
      summary: Replace-Invert Color PDF
      description: >-
        This endpoint accepts a PDF file and option of invert all colors or
        replace text and background colors. Input:PDF Output:PDF Type:SISO
      operationId: replaceAndInvertColor
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReplaceAndInvertColorRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/repair:
    post:
      tags:
        - Misc
      summary: Repair a PDF file
      description: >-
        This endpoint repairs a given PDF file by running Ghostscript (primary),
        qpdf (fallback), or PDFBox (if no external tools available). The PDF is
        first saved to a temporary location, repaired, read back, and then
        returned as a response. Input:PDF Output:PDF Type:SISO
      operationId: repairPdf
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/remove-blanks:
    post:
      tags:
        - Misc
      summary: Remove blank pages from a PDF file
      description: >-
        This endpoint removes blank pages from a given PDF file. Users can
        specify the threshold and white percentage to tune the detection of
        blank pages. Input:PDF Output:PDF Type:SISO
      operationId: removeBlankPages
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RemoveBlankPagesRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/ocr-pdf:
    post:
      tags:
        - Misc
      summary: Process a PDF file with OCR
      description: >-
        This endpoint processes a PDF file using OCR (Optical Character
        Recognition). Users can specify languages, sidecar, deskew, clean,
        cleanFinal, ocrType, ocrRenderType, and removeImagesAfter options. Uses
        OCRmyPDF if available, falls back to Tesseract. Input:PDF Output:PDF
        Type:SI-Conditional
      operationId: processPdfWithOCR
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProcessPdfWithOcrRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/flatten:
    post:
      tags:
        - Misc
      summary: Flatten PDF form fields or full page
      description: >-
        Flattening just PDF form fields or converting each page to images to
        make text unselectable. Input:PDF, Output:PDF. Type:SISO
      operationId: flatten
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlattenRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/extract-images:
    post:
      tags:
        - Misc
      summary: Extract images from a PDF file
      description: >-
        This endpoint extracts images from a given PDF file and returns them in
        a zip file. Users can specify the output image format. Input:PDF
        Output:IMAGE/ZIP Type:SIMO
      operationId: extractImages
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFExtractImagesRequest'
      responses:
        '200':
          description: >-
            Files processed successfully. Returns single file or ZIP archive
            containing multiple files.
          content:
            application/pdf:
              schema:
                type: string
                description: Single PDF file result
                format: binary
            application/zip:
              schema:
                type: string
                description: ZIP archive containing multiple output files
                format: binary
            image/png:
              schema:
                type: string
                description: Single image file (PNG)
                format: binary
            image/jpeg:
              schema:
                type: string
                description: Single image file (JPEG)
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/extract-image-scans:
    post:
      tags:
        - Misc
      summary: Extract image scans from an input file
      description: >-
        This endpoint extracts image scans from a given file based on certain
        parameters. Users can specify angle threshold, tolerance, minimum area,
        minimum contour area, and border size. Input:PDF Output:IMAGE/ZIP
        Type:SIMO
      operationId: extractImageScans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtractImageScansRequest'
      responses:
        '200':
          description: >-
            Files processed successfully. Returns single file or ZIP archive
            containing multiple files.
          content:
            application/pdf:
              schema:
                type: string
                description: Single PDF file result
                format: binary
            application/zip:
              schema:
                type: string
                description: ZIP archive containing multiple output files
                format: binary
            image/png:
              schema:
                type: string
                description: Single image file (PNG)
                format: binary
            image/jpeg:
              schema:
                type: string
                description: Single image file (JPEG)
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/decompress-pdf:
    post:
      tags:
        - Misc
      summary: Decompress PDF streams
      description: Fully decompresses all PDF streams including text content
      operationId: decompressPdf
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/compress-pdf:
    post:
      tags:
        - Misc
      summary: Optimize PDF file
      description: >-
        This endpoint accepts a PDF file and optimizes it based on the provided
        parameters. Input:PDF Output:PDF Type:SISO
      operationId: optimizePdf
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OptimizePdfRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/auto-split-pdf:
    post:
      tags:
        - Misc
      summary: Auto split PDF pages into separate documents
      description: >-
        This endpoint accepts a PDF file, scans each page for a specific QR
        code, and splits the document at the QR code boundaries. The output is a
        zip file containing each separate PDF document. Input:PDF Output:ZIP-PDF
        Type:SISO
      operationId: autoSplitPdf
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AutoSplitPdfRequest'
      responses:
        '200':
          description: >-
            Files processed successfully. Returns single file or ZIP archive
            containing multiple files.
          content:
            application/pdf:
              schema:
                type: string
                description: Single PDF file result
                format: binary
            application/zip:
              schema:
                type: string
                description: ZIP archive containing multiple output files
                format: binary
            image/png:
              schema:
                type: string
                description: Single image file (PNG)
                format: binary
            image/jpeg:
              schema:
                type: string
                description: Single image file (JPEG)
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/auto-rename:
    post:
      tags:
        - Misc
      summary: Extract header from PDF file
      description: >-
        This endpoint accepts a PDF file and attempts to extract its title or
        header based on heuristics. Input:PDF Output:PDF Type:SISO
      operationId: extractHeader_1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtractHeaderRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/add-stamp:
    post:
      tags:
        - Misc
      summary: Add stamp to a PDF file
      description: >-
        This endpoint adds a stamp to a given PDF file. Users can specify the
        stamp type (text or image), rotation, opacity, width spacer, and height
        spacer. Input:PDF Output:PDF Type:SISO
      operationId: addStamp
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddStampRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/add-page-numbers:
    post:
      tags:
        - Misc
      summary: Add page numbers to a PDF document
      description: >-
        This operation takes an input PDF file and adds page numbers to it.
        Input:PDF Output:PDF Type:SISO
      operationId: addPageNumbers
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddPageNumbersRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/add-image:
    post:
      tags:
        - Misc
      summary: Overlay image onto a PDF file
      description: >-
        This endpoint overlays an image onto a PDF file at the specified
        coordinates. The image can be overlaid on every page of the PDF if
        specified.  Input:PDF/IMAGE Output:PDF Type:SISO
      operationId: overlayImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OverlayImageRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/misc/add-attachments:
    post:
      tags:
        - Misc
      summary: Add attachments to PDF
      description: 'This endpoint adds attachments to a PDF. Input:PDF, Output:PDF Type:MISO'
      operationId: addAttachments
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddAttachmentRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/split-pdf-by-sections:
    post:
      tags:
        - General
      summary: Split PDF pages into smaller sections
      description: >-
        Split each page of a PDF into smaller sections based on the user's
        choice (halves, thirds, quarters, etc.), both vertically and
        horizontally. Input:PDF Output:ZIP-PDF Type:SISO
      operationId: splitPdf
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SplitPdfBySectionsRequest'
      responses:
        '200':
          description: >-
            Files processed successfully. Returns single file or ZIP archive
            containing multiple files.
          content:
            application/pdf:
              schema:
                type: string
                description: Single PDF file result
                format: binary
            application/zip:
              schema:
                type: string
                description: ZIP archive containing multiple output files
                format: binary
            image/png:
              schema:
                type: string
                description: Single image file (PNG)
                format: binary
            image/jpeg:
              schema:
                type: string
                description: Single image file (JPEG)
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/split-pdf-by-chapters:
    post:
      tags:
        - General
      summary: Split PDFs by Chapters
      description: Splits a PDF into chapters and returns a ZIP file.
      operationId: splitPdf_1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SplitPdfByChaptersRequest'
      responses:
        '200':
          description: >-
            Files processed successfully. Returns single file or ZIP archive
            containing multiple files.
          content:
            application/pdf:
              schema:
                type: string
                description: Single PDF file result
                format: binary
            application/zip:
              schema:
                type: string
                description: ZIP archive containing multiple output files
                format: binary
            image/png:
              schema:
                type: string
                description: Single image file (PNG)
                format: binary
            image/jpeg:
              schema:
                type: string
                description: Single image file (JPEG)
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/split-pages:
    post:
      tags:
        - General
      summary: Split a PDF file into separate documents
      description: >-
        This endpoint splits a given PDF file into separate documents based on
        the specified page numbers or ranges. Users can specify pages using
        individual numbers, ranges, or 'all' for every page. Input:PDF
        Output:PDF Type:SIMO
      operationId: splitPdf_2
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFWithPageNums'
      responses:
        '200':
          description: >-
            Files processed successfully. Returns single file or ZIP archive
            containing multiple files.
          content:
            application/pdf:
              schema:
                type: string
                description: Single PDF file result
                format: binary
            application/zip:
              schema:
                type: string
                description: ZIP archive containing multiple output files
                format: binary
            image/png:
              schema:
                type: string
                description: Single image file (PNG)
                format: binary
            image/jpeg:
              schema:
                type: string
                description: Single image file (JPEG)
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/split-by-size-or-count:
    post:
      tags:
        - General
      summary: Auto split PDF pages into separate documents based on size or count
      description: "split PDF into multiple paged documents based on size/count, ie if 20 pages and split into 5, it does 5 documents each 4 pages\r\n if 10MB and each page is 1MB and you enter 2MB then 5 docs each 2MB (rounded so that it accepts 1.9MB but not 2.1MB) Input:PDF Output:ZIP-PDF Type:SISO"
      operationId: autoSplitPdf_1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SplitPdfBySizeOrCountRequest'
      responses:
        '200':
          description: >-
            Files processed successfully. Returns single file or ZIP archive
            containing multiple files.
          content:
            application/pdf:
              schema:
                type: string
                description: Single PDF file result
                format: binary
            application/zip:
              schema:
                type: string
                description: ZIP archive containing multiple output files
                format: binary
            image/png:
              schema:
                type: string
                description: Single image file (PNG)
                format: binary
            image/jpeg:
              schema:
                type: string
                description: Single image file (JPEG)
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/scale-pages:
    post:
      tags:
        - General
      summary: Change the size of a PDF page/document
      description: >-
        This operation takes an input PDF file and the size to scale the pages
        to in the output PDF file. Input:PDF Output:PDF Type:SISO
      operationId: scalePages
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScalePagesRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/rotate-pdf:
    post:
      tags:
        - General
      summary: Rotate a PDF file
      description: >-
        This endpoint rotates a given PDF file by a specified angle. The angle
        must be a multiple of 90. Input:PDF Output:PDF Type:SISO
      operationId: rotatePDF
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RotatePDFRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/remove-pages:
    post:
      tags:
        - General
      summary: Remove pages from a PDF file
      description: >-
        This endpoint removes specified pages from a given PDF file. Users can
        provide a comma-separated list of page numbers or ranges to delete.
        Input:PDF Output:PDF Type:SISO
      operationId: deletePages
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFWithPageNums'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/remove-image-pdf:
    post:
      tags:
        - General
      summary: Remove images from file to reduce the file size.
      description: >-
        This endpoint remove images from file to reduce the file size.Input:PDF
        Output:PDF Type:SISO
      operationId: removeImages
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/rearrange-pages:
    post:
      tags:
        - General
      summary: Rearrange pages in a PDF file
      description: >-
        This endpoint rearranges pages in a given PDF file based on the
        specified page order or custom mode. Users can provide a page order as a
        comma-separated list of page numbers or page ranges, or a custom mode.
        Input:PDF Output:PDF
      operationId: rearrangePages
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RearrangePagesRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/pdf-to-single-page:
    post:
      tags:
        - General
      summary: Convert a multi-page PDF into a single long page PDF
      description: >-
        This endpoint converts a multi-page PDF document into a single paged PDF
        document. The width of the single page will be same as the input's
        width, but the height will be the sum of all the pages' heights.
        Input:PDF Output:PDF Type:SISO
      operationId: pdfToSinglePage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/overlay-pdfs:
    post:
      tags:
        - General
      summary: Overlay PDF files in various modes
      description: >-
        Overlay PDF files onto a base PDF with different modes: Sequential,
        Interleaved, or Fixed Repeat. Input:PDF Output:PDF Type:MIMO
      operationId: overlayPdfs
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OverlayPdfsRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/multi-page-layout:
    post:
      tags:
        - General
      summary: Merge multiple pages of a PDF document into a single page
      description: >-
        This operation takes an input PDF file and the number of pages to merge
        into a single sheet in the output PDF file. Input:PDF Output:PDF
        Type:SISO
      operationId: mergeMultiplePagesIntoOne
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MergeMultiplePagesRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/merge-pdfs:
    post:
      tags:
        - General
      summary: Merge multiple PDF files into one
      description: >-
        This endpoint merges multiple PDF files into a single PDF file. The
        merged file will contain all pages from the input files in the order
        they were provided. Input:PDF Output:PDF Type:MISO
      operationId: mergePdfs
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MergePdfsRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/extract-bookmarks:
    post:
      tags:
        - General
      summary: Extract PDF Bookmarks
      description: Extracts bookmarks/table of contents from a PDF document as JSON.
      operationId: extractBookmarks
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Analysis or data extraction completed successfully
          content:
            application/json:
              schema:
                type: object
                description: JSON object containing the requested data or analysis results
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/edit-table-of-contents:
    post:
      tags:
        - General
      summary: Edit Table of Contents
      description: Add or edit bookmarks/table of contents in a PDF document.
      operationId: editTableOfContents
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditTableOfContentsRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/crop:
    post:
      tags:
        - General
      summary: Crops a PDF document
      description: >-
        This operation takes an input PDF file and crops it according to the
        given coordinates. Input:PDF Output:PDF Type:SISO
      operationId: cropPdf
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CropPdfForm'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/general/booklet-imposition:
    post:
      tags:
        - General
      summary: Create a booklet with proper page imposition
      description: >-
        This operation combines page reordering for booklet printing with
        multi-page layout. It rearranges pages in the correct order for booklet
        printing and places multiple pages on each sheet for proper folding and
        binding. Input:PDF Output:PDF Type:SISO
      operationId: createBookletImposition
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookletImpositionRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/filter/filter-page-size:
    post:
      tags:
        - Filter
      summary: Checks if a PDF is of a certain size
      description: 'Input:PDF Output:Boolean Type:SISO'
      operationId: pageSize
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PageSizeRequest'
      responses:
        '200':
          description: Filter condition met - returns the original PDF file
          content:
            application/pdf:
              schema:
                type: string
                description: The original PDF file
                format: binary
        '204':
          description: Filter condition not met - no content returned
        '400':
          description: Bad request - Invalid filter parameters or corrupted PDF
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: >-
            Unprocessable entity - PDF is valid but cannot be analyzed for
            filtering
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - Unexpected error during PDF analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/filter/filter-page-rotation:
    post:
      tags:
        - Filter
      summary: Checks if a PDF is of a certain rotation
      description: 'Input:PDF Output:Boolean Type:SISO'
      operationId: pageRotation
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PageRotationRequest'
      responses:
        '200':
          description: Filter condition met - returns the original PDF file
          content:
            application/pdf:
              schema:
                type: string
                description: The original PDF file
                format: binary
        '204':
          description: Filter condition not met - no content returned
        '400':
          description: Bad request - Invalid filter parameters or corrupted PDF
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: >-
            Unprocessable entity - PDF is valid but cannot be analyzed for
            filtering
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - Unexpected error during PDF analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/filter/filter-page-count:
    post:
      tags:
        - Filter
      summary: 'Checks if a PDF is greater, less or equal to a setPageCount'
      description: 'Input:PDF Output:Boolean Type:SISO'
      operationId: pageCount
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFComparisonAndCount'
      responses:
        '200':
          description: Filter condition met - returns the original PDF file
          content:
            application/pdf:
              schema:
                type: string
                description: The original PDF file
                format: binary
        '204':
          description: Filter condition not met - no content returned
        '400':
          description: Bad request - Invalid filter parameters or corrupted PDF
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: >-
            Unprocessable entity - PDF is valid but cannot be analyzed for
            filtering
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - Unexpected error during PDF analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/filter/filter-file-size:
    post:
      tags:
        - Filter
      summary: Checks if a PDF is a set file size
      description: 'Input:PDF Output:Boolean Type:SISO'
      operationId: fileSize
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileSizeRequest'
      responses:
        '200':
          description: Filter condition met - returns the original PDF file
          content:
            application/pdf:
              schema:
                type: string
                description: The original PDF file
                format: binary
        '204':
          description: Filter condition not met - no content returned
        '400':
          description: Bad request - Invalid filter parameters or corrupted PDF
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: >-
            Unprocessable entity - PDF is valid but cannot be analyzed for
            filtering
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - Unexpected error during PDF analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/filter/filter-contains-text:
    post:
      tags:
        - Filter
      summary: 'Checks if a PDF contains set text, returns true if does'
      description: 'Input:PDF Output:Boolean Type:SISO'
      operationId: containsText
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContainsTextRequest'
      responses:
        '200':
          description: Filter condition met - returns the original PDF file
          content:
            application/pdf:
              schema:
                type: string
                description: The original PDF file
                format: binary
        '204':
          description: Filter condition not met - no content returned
        '400':
          description: Bad request - Invalid filter parameters or corrupted PDF
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: >-
            Unprocessable entity - PDF is valid but cannot be analyzed for
            filtering
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - Unexpected error during PDF analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/filter/filter-contains-image:
    post:
      tags:
        - Filter
      summary: Checks if a PDF contains an image
      description: 'Input:PDF Output:Boolean Type:SISO'
      operationId: containsImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFWithPageNums'
      responses:
        '200':
          description: Filter condition met - returns the original PDF file
          content:
            application/pdf:
              schema:
                type: string
                description: The original PDF file
                format: binary
        '204':
          description: Filter condition not met - no content returned
        '400':
          description: Bad request - Invalid filter parameters or corrupted PDF
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: >-
            Unprocessable entity - PDF is valid but cannot be analyzed for
            filtering
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - Unexpected error during PDF analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/convert/url/pdf:
    post:
      tags:
        - Convert
      summary: Convert a URL to a PDF
      description: >-
        This endpoint fetches content from a URL and converts it to a PDF
        format. Input:N/A Output:PDF Type:SISO
      operationId: urlToPdf
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UrlToPdfRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/convert/pdf/xml:
    post:
      tags:
        - Convert
      summary: Convert PDF to XML
      description: >-
        This endpoint converts a PDF file to an XML file. Input:PDF Output:XML
        Type:SISO
      operationId: processPdfToXML
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: PDF converted successfully to XML format
          content:
            application/xml:
              schema:
                type: string
                description: XML file converted from PDF
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/convert/pdf/word:
    post:
      tags:
        - Convert
      summary: Convert PDF to Word document
      description: >-
        This endpoint converts a given PDF file to a Word document format.
        Input:PDF Output:WORD Type:SISO
      operationId: processPdfToWord
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PdfToWordRequest'
      responses:
        '200':
          description: PDF converted successfully to Word document
          content:
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
                description: Microsoft Word document (DOCX)
                format: binary
            application/msword:
              schema:
                type: string
                description: Microsoft Word document (DOC)
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted PDF
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: >-
            Unprocessable entity - PDF is valid but cannot be converted to Word
            format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - Unexpected error during Word conversion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/convert/pdf/text:
    post:
      tags:
        - Convert
      summary: Convert PDF to Text or RTF format
      description: >-
        This endpoint converts a given PDF file to Text or RTF format. Input:PDF
        Output:TXT Type:SISO
      operationId: processPdfToRTForTXT
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PdfToTextOrRTFRequest'
      responses:
        '200':
          description: PDF text extracted successfully
          content:
            text/plain:
              schema:
                type: string
                description: Plain text content extracted from PDF
            application/rtf:
              schema:
                type: string
                description: Rich Text Format document
                format: binary
        '400':
          description: Bad request - Invalid input parameters or corrupted PDF
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable entity - PDF is valid but text extraction failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - Unexpected error during text extraction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/convert/pdf/presentation:
    post:
      tags:
        - Convert
      summary: Convert PDF to Presentation format
      description: >-
        This endpoint converts a given PDF file to a Presentation format.
        Input:PDF Output:PPT Type:SISO
      operationId: processPdfToPresentation
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PdfToPresentationRequest'
      responses:
        '200':
          description: PDF converted successfully to PowerPoint presentation
          content:
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                type: string
                description: Microsoft PowerPoint presentation (PPTX)
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted PDF
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: >-
            Unprocessable entity - PDF is valid but cannot be converted to
            PowerPoint format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: >-
            Internal server error - Unexpected error during PowerPoint
            conversion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/convert/pdf/pdfa:
    post:
      tags:
        - Convert
      summary: Convert a PDF to a PDF/A
      description: >-
        This endpoint converts a PDF file to a PDF/A file using LibreOffice.
        PDF/A is a format designed for long-term archiving of digital documents.
        Input:PDF Output:PDF Type:SISO
      operationId: pdfToPdfA
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PdfToPdfARequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/convert/pdf/markdown:
    post:
      tags:
        - Convert
      summary: Convert PDF to Markdown
      description: >-
        This endpoint converts a PDF file to Markdown format. Input:PDF
        Output:Markdown Type:SISO
      operationId: processPdfToMarkdown
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: PDF converted successfully to Markdown format
          content:
            text/markdown:
              schema:
                type: string
                description: Markdown file converted from PDF
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/convert/pdf/img:
    post:
      tags:
        - Convert
      summary: Convert PDF to image(s)
      description: >-
        This endpoint converts a PDF file to image(s) with the specified image
        format, color type, and DPI. Users can choose to get a single image or
        multiple images.  Input:PDF Output:Image Type:SI-Conditional
      operationId: convertToImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConvertToImageRequest'
      responses:
        '200':
          description: >-
            Files processed successfully. Returns single file or ZIP archive
            containing multiple files.
          content:
            application/pdf:
              schema:
                type: string
                description: Single PDF file result
                format: binary
            application/zip:
              schema:
                type: string
                description: ZIP archive containing multiple output files
                format: binary
            image/png:
              schema:
                type: string
                description: Single image file (PNG)
                format: binary
            image/jpeg:
              schema:
                type: string
                description: Single image file (JPEG)
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/convert/pdf/html:
    post:
      tags:
        - Convert
      summary: Convert PDF to HTML
      description: >-
        This endpoint converts a PDF file to HTML format. Input:PDF Output:HTML
        Type:SISO
      operationId: processPdfToHTML
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: PDF converted successfully to HTML format
          content:
            text/html:
              schema:
                type: string
                description: HTML file converted from PDF
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/convert/pdf/csv:
    post:
      tags:
        - Convert
      summary: Extracts a CSV document from a PDF
      description: >-
        This operation takes an input PDF file and returns CSV file of whole
        page. Input:PDF Output:CSV Type:SISO
      operationId: pdfToCsv
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFWithPageNums'
      responses:
        '200':
          description: PDF tables extracted successfully to CSV format
          content:
            text/csv:
              schema:
                type: string
                description: CSV file containing extracted table data
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/convert/markdown/pdf:
    post:
      tags:
        - Convert
      summary: Convert a Markdown file to PDF
      description: >-
        This endpoint takes a Markdown file input, converts it to HTML, and then
        to PDF format. Input:MARKDOWN Output:PDF Type:SISO
      operationId: markdownToPdf
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GeneralFile'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/convert/img/pdf:
    post:
      tags:
        - Convert
      summary: Convert images to a PDF file
      description: >-
        This endpoint converts one or more images to a PDF file. Users can
        specify whether to stretch the images to fit the PDF page, and whether
        to automatically rotate the images. Input:Image Output:PDF Type:MISO
      operationId: convertToPdf
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConvertToPdfRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/convert/html/pdf:
    post:
      tags:
        - Convert
      summary: Convert an HTML or ZIP (containing HTML and CSS) to PDF
      description: >-
        This endpoint takes an HTML or ZIP file input and converts it to a PDF
        format. Input:HTML Output:PDF Type:SISO
      operationId: HtmlToPdf
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HTMLToPdfRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/convert/file/pdf:
    post:
      tags:
        - Convert
      summary: Convert a file to a PDF using LibreOffice
      description: >-
        This endpoint converts a given file to a PDF using LibreOffice API 
        Input:ANY Output:PDF Type:SISO
      operationId: processFileToPDF
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GeneralFile'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/convert/eml/pdf:
    post:
      tags:
        - Convert
      summary: Convert EML to PDF
      description: >-
        This endpoint converts EML (email) files to PDF format with extensive
        customization options. Features include font settings, image
        constraints, display modes, attachment handling, and HTML debug output.
        Input: EML file, Output: PDF or HTML file. Type: SISO
      operationId: convertEmlToPdf
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmlToPdfRequest'
      responses:
        '200':
          description: PDF processed successfully
          content:
            application/pdf:
              schema:
                type: string
                description: The processed PDF file
                format: binary
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/analysis/security-info:
    post:
      tags:
        - Analysis
      summary: Get security information
      description: >-
        Returns encryption and permission details. Input:PDF Output:JSON
        Type:SISO
      operationId: getSecurityInfo
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: Analysis or data extraction completed successfully
          content:
            application/json:
              schema:
                type: object
                description: JSON object containing the requested data or analysis results
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/analysis/page-dimensions:
    post:
      tags:
        - Analysis
      summary: Get page dimensions for all pages
      description: 'Returns width and height of each page. Input:PDF Output:JSON Type:SISO'
      operationId: getPageDimensions
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: Analysis or data extraction completed successfully
          content:
            application/json:
              schema:
                type: object
                description: JSON object containing the requested data or analysis results
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/analysis/page-count:
    post:
      tags:
        - Analysis
      summary: Get PDF page count
      description: 'Returns total number of pages in PDF. Input:PDF Output:JSON Type:SISO'
      operationId: getPageCount
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: Analysis or data extraction completed successfully
          content:
            application/json:
              schema:
                type: object
                description: JSON object containing the requested data or analysis results
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/analysis/form-fields:
    post:
      tags:
        - Analysis
      summary: Get form field information
      description: >-
        Returns count and details of form fields. Input:PDF Output:JSON
        Type:SISO
      operationId: getFormFields
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: Analysis or data extraction completed successfully
          content:
            application/json:
              schema:
                type: object
                description: JSON object containing the requested data or analysis results
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/analysis/font-info:
    post:
      tags:
        - Analysis
      summary: Get font information
      description: >-
        Returns list of fonts used in the document. Input:PDF Output:JSON
        Type:SISO
      operationId: getFontInfo
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: Analysis or data extraction completed successfully
          content:
            application/json:
              schema:
                type: object
                description: JSON object containing the requested data or analysis results
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/analysis/document-properties:
    post:
      tags:
        - Analysis
      summary: Get PDF document properties
      description: 'Returns title, author, subject, etc. Input:PDF Output:JSON Type:SISO'
      operationId: getDocumentProperties
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: Analysis or data extraction completed successfully
          content:
            application/json:
              schema:
                type: object
                description: JSON object containing the requested data or analysis results
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/analysis/basic-info:
    post:
      tags:
        - Analysis
      summary: Get basic PDF information
      description: 'Returns page count, version, file size. Input:PDF Output:JSON Type:SISO'
      operationId: getBasicInfo
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: Analysis or data extraction completed successfully
          content:
            application/json:
              schema:
                type: object
                description: JSON object containing the requested data or analysis results
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
  /api/v1/analysis/annotation-info:
    post:
      tags:
        - Analysis
      summary: Get annotation information
      description: 'Returns count and types of annotations. Input:PDF Output:JSON Type:SISO'
      operationId: getAnnotationInfo
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFFile'
      responses:
        '200':
          description: Analysis or data extraction completed successfully
          content:
            application/json:
              schema:
                type: object
                description: JSON object containing the requested data or analysis results
        '400':
          description: >-
            Bad request - Invalid input parameters, unsupported format, or
            corrupted file
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid input parameters or corrupted file
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 400
                message: Invalid input parameters or corrupted file
                error: Bad Request
        '413':
          description: Payload too large - File exceeds maximum allowed size
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 413
                  error:
                    type: string
                    example: Payload Too Large
                  message:
                    type: string
                    example: File size exceeds maximum allowed limit
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 413
                message: File size exceeds maximum allowed limit
                error: Payload Too Large
        '422':
          description: Unprocessable entity - File is valid but cannot be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                  error:
                    type: string
                    example: Unprocessable Entity
                  message:
                    type: string
                    example: File is valid but cannot be processed
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 422
                message: File is valid but cannot be processed
                error: Unprocessable Entity
        '500':
          description: Internal server error - Unexpected error during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: Unexpected error during processing
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-01-15T10:30:00Z'
                  path:
                    type: string
                    example: /api/v1/example/endpoint
              example:
                timestamp: '2024-01-15T10:30:00Z'
                path: /api/v1/example/endpoint
                status: 500
                message: Unexpected error during processing
                error: Internal Server Error
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code
          format: int32
          example: 400
        message:
          type: string
          description: Error message describing what went wrong
          example: Invalid PDF file or corrupted data
        timestamp:
          type: string
          description: Timestamp when the error occurred
          example: '2024-01-15T10:30:00Z'
        path:
          type: string
          description: Request path where the error occurred
          example: /api/v1/general/rotate-pdf
      description: Standard error response
    SignatureValidationRequest:
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        certFile:
          type: string
          format: binary
    SanitizePdfRequest:
      required:
        - removeEmbeddedFiles
        - removeFonts
        - removeJavaScript
        - removeLinks
        - removeMetadata
        - removeXMPMetadata
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        removeJavaScript:
          type: boolean
          description: Remove JavaScript actions from the PDF
          default: true
        removeEmbeddedFiles:
          type: boolean
          description: Remove embedded files from the PDF
          default: true
        removeXMPMetadata:
          type: boolean
          description: Remove XMP metadata from the PDF
          default: false
        removeMetadata:
          type: boolean
          description: Remove document info metadata from the PDF
          default: false
        removeLinks:
          type: boolean
          description: Remove links from the PDF
          default: false
        removeFonts:
          type: boolean
          description: Remove fonts from the PDF
          default: false
    PDFPasswordRequest:
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        password:
          type: string
          description: The password of the PDF file
          format: password
    PDFFile:
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
    ManualRedactPdfRequest:
      required:
        - convertPDFToImage
        - pageNumbers
        - pageRedactionColor
        - redactions
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        pageNumbers:
          type: string
          description: >-
            The pages to select, Supports ranges (e.g., '1,3,5-9'), or 'all' or
            functions in the format 'an+b' where 'a' is the multiplier of the
            page number 'n', and 'b' is a constant (e.g., '2n+1', '3n', '6n-5')
          default: all
        redactions:
          type: array
          description: A list of areas that should be redacted
          items:
            $ref: '#/components/schemas/RedactionArea'
        convertPDFToImage:
          type: boolean
          description: Convert the redacted PDF to an image
          default: false
        pageRedactionColor:
          type: string
          description: The color used to fully redact certain pages
          default: '#000000'
    RedactionArea:
      type: object
      properties:
        x:
          type: number
          description: The left edge point of the area to be redacted.
          format: double
        'y':
          type: number
          description: The top edge point of the area to be redacted.
          format: double
        height:
          type: number
          description: The height of the area to be redacted.
          format: double
        width:
          type: number
          description: The width of the area to be redacted.
          format: double
        page:
          type: integer
          description: The page on which the area should be redacted.
          format: int32
        color:
          type: string
          description: The color used to redact the specified area.
      description: A list of areas that should be redacted
    SignPDFWithCertRequest:
      required:
        - certType
        - showLogo
        - showSignature
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        certType:
          type: string
          description: The type of the digital certificate
          enum:
            - PEM
            - PKCS12
            - JKS
            - SERVER
        privateKeyFile:
          type: string
          format: binary
        certFile:
          type: string
          format: binary
        p12File:
          type: string
          format: binary
        jksFile:
          type: string
          format: binary
        password:
          type: string
          description: The password for the keystore or the private key
          format: password
        showSignature:
          type: boolean
          description: Whether to visually show the signature in the PDF file
          default: false
        reason:
          type: string
          description: The reason for signing the PDF
          default: Signed by SPDF
        location:
          type: string
          description: The location where the PDF is signed
          default: SPDF
        name:
          type: string
          description: The name of the signer
          default: SPDF
        pageNumber:
          type: integer
          description: >-
            The page number where the signature should be visible. This is
            required if showSignature is set to true
          format: int32
          default: 1
        showLogo:
          type: boolean
          description: Whether to visually show a signature logo along with the signature
          default: true
    RedactPdfRequest:
      required:
        - convertPDFToImage
        - customPadding
        - listOfText
        - redactColor
        - useRegex
        - wholeWordSearch
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        listOfText:
          type: string
          description: List of text to redact from the PDF
          default: 'text,text2'
        useRegex:
          type: boolean
          description: Whether to use regex for the listOfText
          default: false
        wholeWordSearch:
          type: boolean
          description: Whether to use whole word search
          default: false
        redactColor:
          type: string
          description: The color for redaction
          default: '#000000'
        customPadding:
          type: number
          description: Custom padding for redaction
        convertPDFToImage:
          type: boolean
          description: Convert the redacted PDF to an image
          default: false
    AddWatermarkRequest:
      required:
        - convertPDFToImage
        - watermarkType
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        watermarkType:
          type: string
          description: The watermark type (text or image)
          enum:
            - text
            - image
        watermarkText:
          type: string
          description: The watermark text
          default: Stirling Software
        watermarkImage:
          type: string
          format: binary
        alphabet:
          type: string
          description: The selected alphabet
          default: roman
          enum:
            - roman
            - arabic
            - japanese
            - korean
            - chinese
        fontSize:
          type: number
          description: The font size of the watermark text
          format: float
          default: 30
        rotation:
          type: number
          description: The rotation of the watermark in degrees
          format: float
          default: 0
        opacity:
          type: number
          description: The opacity of the watermark (0.0 - 1.0)
          format: float
          default: 0.5
        widthSpacer:
          type: integer
          description: The width spacer between watermark elements
          format: int32
          default: 50
        heightSpacer:
          type: integer
          description: The height spacer between watermark elements
          format: int32
          default: 50
        customColor:
          type: string
          description: The color for watermark
          default: '#d3d3d3'
        convertPDFToImage:
          type: boolean
          description: Convert the redacted PDF to an image
          default: false
    AddPasswordRequest:
      required:
        - keyLength
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        ownerPassword:
          type: string
          description: >-
            The owner password to be added to the PDF file (Restricts what can
            be done with the document once it is opened)
          format: password
        password:
          type: string
          description: >-
            The password to be added to the PDF file (Restricts the opening of
            the document itself.)
          format: password
        keyLength:
          type: integer
          description: The length of the encryption key
          format: int32
          enum:
            - 40
            - 128
            - 256
        preventAssembly:
          type: boolean
          description: Whether document assembly is prevented
          default: false
        preventExtractContent:
          type: boolean
          description: Whether content extraction is prevented
          default: false
        preventExtractForAccessibility:
          type: boolean
          description: Whether content extraction for accessibility is prevented
          default: false
        preventFillInForm:
          type: boolean
          description: Whether form filling is prevented
          default: false
        preventModify:
          type: boolean
          description: Whether document modification is prevented
          default: false
        preventModifyAnnotations:
          type: boolean
          description: Whether modification of annotations is prevented
          default: false
        preventPrinting:
          type: boolean
          description: Whether printing of the document is prevented
          default: false
        preventPrintingFaithful:
          type: boolean
          description: Whether faithful printing is prevented
          default: false
    HandleDataRequest:
      required:
        - fileInput
        - json
      type: object
      properties:
        fileInput:
          type: array
          description: The input files
          items:
            type: string
            format: binary
        json:
          type: string
          description: >-
            Pipeline configuration in JSON format containing name and operations
            list
          example: >-
            {\"name\":\"Prepare-pdfs-for-email\",\"pipeline\":[{\"operation\":\"/api/v1/misc/repair\",\"parameters\":{}},{\"operation\":\"/api/v1/security/sanitize-pdf\",\"parameters\":{\"removeJavaScript\":true,\"removeEmbeddedFiles\":false}},{\"operation\":\"/api/v1/misc/compress-pdf\",\"parameters\":{\"optimizeLevel\":2}}]}
    MetadataRequest:
      required:
        - deleteAll
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        deleteAll:
          type: boolean
          description: Delete all metadata if set to true
          default: false
        author:
          type: string
          description: The author of the document
          default: author
        creationDate:
          pattern: 'yyyy/MM/dd HH:mm:ss'
          type: string
          description: 'The creation date of the document (format: yyyy/MM/dd HH:mm:ss)'
          default: '2023/10/01 12:00:00'
        creator:
          type: string
          description: The creator of the document
          default: creator
        keywords:
          type: string
          description: The keywords for the document
          default: keywords
        modificationDate:
          pattern: 'yyyy/MM/dd HH:mm:ss'
          type: string
          description: 'The modification date of the document (format: yyyy/MM/dd HH:mm:ss)'
          default: '2023/10/01 12:00:00'
        producer:
          type: string
          description: The producer of the document
          default: producer
        subject:
          type: string
          description: The subject of the document
          default: subject
        title:
          type: string
          description: The title of the document
          default: title
        trapped:
          type: string
          description: The trapped status of the document
          default: 'False'
          enum:
            - 'True'
            - 'False'
            - Unknown
        allRequestParams:
          type: object
          additionalProperties:
            type: string
            description: >-
              Map list of key and value of custom parameters. Note these must
              start with customKey and customValue if they are non-standard
          description: >-
            Map list of key and value of custom parameters. Note these must
            start with customKey and customValue if they are non-standard
    ScannerEffectRequest:
      required:
        - fileInput
        - quality
        - rotation
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        quality:
          type: string
          description: Scan quality preset
          example: high
          enum:
            - low
            - medium
            - high
        rotation:
          type: string
          description: Rotation preset
          example: none
          enum:
            - none
            - slight
            - moderate
            - severe
        colorspace:
          type: string
          description: Colorspace for output image
          example: grayscale
          enum:
            - grayscale
            - color
        border:
          type: integer
          description: Border thickness in pixels
          format: int32
          example: 20
        rotate:
          type: integer
          description: Base rotation in degrees
          format: int32
          example: 0
        rotateVariance:
          type: integer
          description: Random rotation variance in degrees
          format: int32
          example: 2
        brightness:
          type: number
          description: Brightness multiplier (1.0 = no change)
          format: float
          example: 1
        contrast:
          type: number
          description: Contrast multiplier (1.0 = no change)
          format: float
          example: 1
        blur:
          type: number
          description: 'Blur amount (0 = none, higher = more blur)'
          format: float
          example: 1
        noise:
          type: number
          description: 'Noise amount (0 = none, higher = more noise)'
          format: float
          example: 8
        yellowish:
          type: boolean
          description: Simulate yellowed paper
          example: false
        resolution:
          type: integer
          description: Rendering resolution in DPI
          format: int32
          example: 300
        advancedEnabled:
          type: boolean
          description: Whether advanced settings are enabled
          example: false
        qualityValue:
          type: integer
          format: int32
        rotationValue:
          type: integer
          format: int32
    ReplaceAndInvertColorRequest:
      required:
        - highContrastColorCombination
        - replaceAndInvertOption
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        replaceAndInvertOption:
          type: string
          description: Replace and Invert color options of a pdf.
          default: HIGH_CONTRAST_COLOR
          enum:
            - HIGH_CONTRAST_COLOR
            - CUSTOM_COLOR
            - FULL_INVERSION
            - HIGH_CONTRAST_COLOR
            - CUSTOM_COLOR
            - FULL_INVERSION
        highContrastColorCombination:
          type: string
          description: >-
            If HIGH_CONTRAST_COLOR option selected, then pick the default color
            option for text and background.
          default: WHITE_TEXT_ON_BLACK
          enum:
            - WHITE_TEXT_ON_BLACK
            - BLACK_TEXT_ON_WHITE
            - YELLOW_TEXT_ON_BLACK
            - GREEN_TEXT_ON_BLACK
            - WHITE_TEXT_ON_BLACK
            - BLACK_TEXT_ON_WHITE
            - YELLOW_TEXT_ON_BLACK
            - GREEN_TEXT_ON_BLACK
        backGroundColor:
          type: string
          description: >-
            If CUSTOM_COLOR option selected, then pick the custom color for
            background. Expected color value should be 24bit decimal value of a
            color
        textColor:
          type: string
          description: >-
            If CUSTOM_COLOR option selected, then pick the custom color for
            text. Expected color value should be 24bit decimal value of a color
    RemoveBlankPagesRequest:
      required:
        - threshold
        - whitePercent
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        threshold:
          maximum: 255
          minimum: 0
          type: integer
          description: The threshold value to determine blank pages
          format: int32
          default: 10
        whitePercent:
          maximum: 100
          minimum: 0.1
          type: number
          description: The percentage of white color on a page to consider it as blank
          format: float
          default: 99.9
    ProcessPdfWithOcrRequest:
      required:
        - languages
        - ocrRenderType
        - ocrType
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        languages:
          type: array
          description: 'List of languages to use in OCR processing, e.g., ''eng'', ''deu'''
          items:
            type: string
            description: 'List of languages to use in OCR processing, e.g., ''eng'', ''deu'''
            default: '["eng"]'
          default:
            - eng
        sidecar:
          type: boolean
          description: Include OCR text in a sidecar text file if set to true
        deskew:
          type: boolean
          description: Deskew the input file if set to true
        clean:
          type: boolean
          description: Clean the input file if set to true
        cleanFinal:
          type: boolean
          description: Clean the final output if set to true
        ocrType:
          type: string
          description: 'Specify the OCR type, e.g., ''skip-text'', ''force-ocr'', or ''Normal'''
          enum:
            - skip-text
            - force-ocr
            - Normal
        ocrRenderType:
          type: string
          description: 'Specify the OCR render type, either ''hocr'' or ''sandwich'''
          default: hocr
          enum:
            - hocr
            - sandwich
        removeImagesAfter:
          type: boolean
          description: Remove images from the output PDF if set to true
    FlattenRequest:
      required:
        - flattenOnlyForms
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        flattenOnlyForms:
          type: boolean
          description: >-
            True to flatten only the forms, false to flatten full PDF (Convert
            page to image)
          default: false
    PDFExtractImagesRequest:
      required:
        - format
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        format:
          type: string
          description: 'The output image format e.g., ''png'', ''jpeg'', or ''gif'''
          default: png
          enum:
            - png
            - jpeg
            - gif
        allowDuplicates:
          type: boolean
          description: >-
            Boolean to enable/disable the saving of duplicate images, true to
            enable duplicates
          default: false
    ExtractImageScansRequest:
      required:
        - angleThreshold
        - borderSize
        - fileInput
        - minArea
        - minContourArea
        - tolerance
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        angleThreshold:
          type: integer
          description: The angle threshold for the image scan extraction
          format: int32
          default: 5
        tolerance:
          type: integer
          description: The tolerance for the image scan extraction
          format: int32
          default: 20
        minArea:
          type: integer
          description: The minimum area for the image scan extraction
          format: int32
          default: 8000
        minContourArea:
          type: integer
          description: The minimum contour area for the image scan extraction
          format: int32
          default: 500
        borderSize:
          type: integer
          description: The border size for the image scan extraction
          format: int32
          default: 1
    OptimizePdfRequest:
      required:
        - expectedOutputSize
        - grayscale
        - linearize
        - normalize
        - optimizeLevel
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        optimizeLevel:
          type: integer
          description: >-
            The level of optimization to apply to the PDF file. Higher values
            indicate greater compression but may reduce quality.
          format: int32
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
        expectedOutputSize:
          type: string
          description: 'The expected output size, e.g. ''100MB'', ''25KB'', etc.'
          default: 25KB
        linearize:
          type: boolean
          description: >-
            Whether to linearize the PDF for faster web viewing. Default is
            false.
          default: false
        normalize:
          type: boolean
          description: >-
            Whether to normalize the PDF content for better compatibility.
            Default is false.
          default: false
        grayscale:
          type: boolean
          description: Whether to convert the PDF to grayscale. Default is false.
          default: false
    AutoSplitPdfRequest:
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        duplexMode:
          type: boolean
          description: >-
            Flag indicating if the duplex mode is active, where the page after
            the divider also gets removed.
          default: false
    ExtractHeaderRequest:
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        useFirstTextAsFallback:
          type: boolean
          description: >-
            Flag indicating whether to use the first text as a fallback if no
            suitable title is found. Defaults to false.
          default: false
    AddStampRequest:
      required:
        - customMargin
        - fontSize
        - opacity
        - overrideX
        - overrideY
        - pageNumbers
        - position
        - rotation
        - stampType
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        pageNumbers:
          type: string
          description: >-
            The pages to select, Supports ranges (e.g., '1,3,5-9'), or 'all' or
            functions in the format 'an+b' where 'a' is the multiplier of the
            page number 'n', and 'b' is a constant (e.g., '2n+1', '3n', '6n-5')
          default: all
        stampType:
          type: string
          description: The stamp type (text or image)
          enum:
            - text
            - image
        stampText:
          type: string
          description: The stamp text
          default: Stirling Software
        stampImage:
          type: string
          format: binary
        alphabet:
          type: string
          description: The selected alphabet of the stamp text
          default: roman
          enum:
            - roman
            - arabic
            - japanese
            - korean
            - chinese
        fontSize:
          type: number
          description: The font size of the stamp text and image
          format: float
          default: 30
        rotation:
          type: number
          description: The rotation of the stamp in degrees
          format: float
          default: 0
        opacity:
          type: number
          description: The opacity of the stamp (0.0 - 1.0)
          format: float
          default: 0.5
        position:
          type: integer
          description: >-
            Position for stamp placement based on a 1-9 grid (1: bottom-left, 2:
            bottom-center, 3: bottom-right, 4: middle-left, 5: middle-center, 6:
            middle-right, 7: top-left, 8: top-center, 9: top-right)
          format: int32
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
        overrideX:
          type: number
          description: >-
            Override X coordinate for stamp placement. If set, it will override
            the position-based calculation. Negative value means no override.
          format: float
          default: -1
        overrideY:
          type: number
          description: >-
            Override Y coordinate for stamp placement. If set, it will override
            the position-based calculation. Negative value means no override.
          format: float
          default: -1
        customMargin:
          type: string
          description: Specifies the margin size for the stamp.
          default: medium
          enum:
            - small
            - medium
            - large
            - x-large
        customColor:
          type: string
          description: The color of the stamp text
          default: '#d3d3d3'
    AddPageNumbersRequest:
      required:
        - fontSize
        - fontType
        - pageNumbers
        - position
        - startingNumber
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        pageNumbers:
          type: string
          description: >-
            The pages to select, Supports ranges (e.g., '1,3,5-9'), or 'all' or
            functions in the format 'an+b' where 'a' is the multiplier of the
            page number 'n', and 'b' is a constant (e.g., '2n+1', '3n', '6n-5')
          default: all
        customMargin:
          type: string
          description: 'Custom margin: small/medium/large/x-large'
          default: medium
          enum:
            - small
            - medium
            - large
            - x-large
        fontSize:
          minimum: 1
          type: number
          description: Font size for page numbers
          format: float
          default: 12
        fontType:
          type: string
          description: Font type for page numbers
          enum:
            - helvetica
            - courier
            - times
        position:
          type: integer
          description: >-
            Position: 1-9 representing positions on the page (1=top-left,
            2=top-center, 3=top-right, 4=middle-left, 5=middle-center,
            6=middle-right, 7=bottom-left, 8=bottom-center, 9=bottom-right)
          format: int32
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
        startingNumber:
          minimum: 1
          type: integer
          description: Starting number for page numbering
          format: int32
          default: 1
        pagesToNumber:
          type: string
          description: 'Which pages to number (e.g. ''1,3-5,7'' or ''all'')'
          default: all
        customText:
          type: string
          description: >-
            Custom text pattern. Available variables: {n}=current page number,
            {total}=total pages, {filename}=original filename
          example: 'Page {n} of {total}'
          default: '{n}'
    OverlayImageRequest:
      required:
        - everyPage
        - imageFile
        - x
        - 'y'
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        imageFile:
          type: string
          format: binary
        x:
          type: number
          description: The x-coordinate at which to place the top-left corner of the image.
          format: float
          default: 0
        'y':
          type: number
          description: The y-coordinate at which to place the top-left corner of the image.
          format: float
          default: 0
        everyPage:
          type: boolean
          description: Whether to overlay the image onto every page of the PDF.
          default: false
    AddAttachmentRequest:
      required:
        - attachments
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        attachments:
          type: array
          description: The image file to be overlaid onto the PDF.
          format: binary
          items:
            type: string
            format: binary
    SplitPdfBySectionsRequest:
      required:
        - horizontalDivisions
        - merge
        - verticalDivisions
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        horizontalDivisions:
          minimum: 0
          type: integer
          description: Number of horizontal divisions for each PDF page
          format: int32
          default: 0
        verticalDivisions:
          minimum: 0
          type: integer
          description: Number of vertical divisions for each PDF page
          format: int32
          default: 1
        merge:
          type: boolean
          description: Merge the split documents into a single PDF
          default: true
    SplitPdfByChaptersRequest:
      required:
        - allowDuplicates
        - bookmarkLevel
        - includeMetadata
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        includeMetadata:
          type: boolean
          description: Whether to include Metadata or not
          default: true
        allowDuplicates:
          type: boolean
          description: Whether to allow duplicates or not
          default: true
        bookmarkLevel:
          minimum: 0
          type: integer
          description: Maximum bookmark level required
          format: int32
          default: 2
    PDFWithPageNums:
      required:
        - pageNumbers
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        pageNumbers:
          type: string
          description: >-
            The pages to select, Supports ranges (e.g., '1,3,5-9'), or 'all' or
            functions in the format 'an+b' where 'a' is the multiplier of the
            page number 'n', and 'b' is a constant (e.g., '2n+1', '3n', '6n-5')
          default: all
    SplitPdfBySizeOrCountRequest:
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        splitType:
          type: integer
          description: >-
            Determines the type of split: 0 for size, 1 for page count, 2 for
            document count
          format: int32
          default: 0
        splitValue:
          type: string
          description: >-
            Value for split: size in MB (e.g., '10MB') or number of pages (e.g.,
            '5')
          default: 10MB
    ScalePagesRequest:
      required:
        - pageSize
        - scaleFactor
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        pageSize:
          type: string
          description: >-
            The scale of pages in the output PDF. Acceptable values are A0-A6,
            LETTER, LEGAL, KEEP.
          enum:
            - A0
            - A1
            - A2
            - A3
            - A4
            - A5
            - A6
            - LETTER
            - LEGAL
            - KEEP
        scaleFactor:
          minimum: 0
          type: number
          description: >-
            The scale of the content on the pages of the output PDF. Acceptable
            values are floats.
          format: float
          default: 1
    RotatePDFRequest:
      required:
        - angle
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        angle:
          type: integer
          description: >-
            The angle by which to rotate the PDF file. This should be a multiple
            of 90.
          format: int32
          enum:
            - 0
            - 90
            - 180
            - 270
    RearrangePagesRequest:
      required:
        - pageNumbers
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        pageNumbers:
          type: string
          description: >-
            The pages to select, Supports ranges (e.g., '1,3,5-9'), or 'all' or
            functions in the format 'an+b' where 'a' is the multiplier of the
            page number 'n', and 'b' is a constant (e.g., '2n+1', '3n', '6n-5')
          default: all
        customMode:
          type: string
          description: >
            The custom mode for page rearrangement. Valid values are:

            CUSTOM: Uses order defined in PageNums DUPLICATE: Duplicate pages n
            times (if Page order defined as 4, then duplicates each page 4
            times)REVERSE_ORDER: Reverses the order of all pages.

            DUPLEX_SORT: Sorts pages as if all fronts were scanned then all
            backs in reverse (1, n, 2, n-1, ...). BOOKLET_SORT: Arranges pages
            for booklet printing (last, first, second, second last, ...).

            ODD_EVEN_SPLIT: Splits and arranges pages into odd and even numbered
            pages.

            ODD_EVEN_MERGE: Merges pages and organises them alternately into odd
            and even pages.

            REMOVE_FIRST: Removes the first page.

            REMOVE_LAST: Removes the last page.

            REMOVE_FIRST_AND_LAST: Removes both the first and the last pages.
          enum:
            - CUSTOM
            - REVERSE_ORDER
            - DUPLEX_SORT
            - BOOKLET_SORT
            - SIDE_STITCH_BOOKLET_SORT
            - ODD_EVEN_SPLIT
            - ODD_EVEN_MERGE
            - REMOVE_FIRST
            - REMOVE_LAST
            - REMOVE_FIRST_AND_LAST
            - DUPLICATE
    OverlayPdfsRequest:
      required:
        - overlayFiles
        - overlayMode
        - overlayPosition
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        overlayFiles:
          type: array
          description: >-
            An array of PDF files to be used as overlays on the base PDF. The
            order in these files is applied based on the selected mode.
          items:
            type: string
            format: binary
        overlayMode:
          type: string
          description: >-
            The mode of overlaying: 'SequentialOverlay' for sequential
            application, 'InterleavedOverlay' for round-robin application,
            'FixedRepeatOverlay' for fixed repetition based on provided counts
          enum:
            - SequentialOverlay
            - InterleavedOverlay
            - FixedRepeatOverlay
        counts:
          type: array
          description: >-
            An array of integers specifying the number of times each
            corresponding overlay file should be applied in the
            'FixedRepeatOverlay' mode. This should match the length of the
            overlayFiles array.
          items:
            type: integer
            description: >-
              An array of integers specifying the number of times each
              corresponding overlay file should be applied in the
              'FixedRepeatOverlay' mode. This should match the length of the
              overlayFiles array.
            format: int32
        overlayPosition:
          type: number
          description: 'Overlay position 0 is Foregound, 1 is Background'
          enum:
            - 0
            - 1
    MergeMultiplePagesRequest:
      required:
        - pagesPerSheet
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        pagesPerSheet:
          type: integer
          description: The number of pages to fit onto a single sheet in the output PDF.
          format: int32
          enum:
            - 2
            - 3
            - 4
            - 9
            - 16
        addBorder:
          type: boolean
          description: Boolean for if you wish to add border around the pages
    MergePdfsRequest:
      required:
        - fileInput
        - removeCertSign
        - sortType
      type: object
      properties:
        fileInput:
          type: array
          description: The input PDF files
          items:
            type: string
            format: binary
        sortType:
          type: string
          description: The type of sorting to be applied on the input files before merging.
          default: orderProvided
          enum:
            - orderProvided
            - byFileName
            - byDateModified
            - byDateCreated
            - byPDFTitle
        removeCertSign:
          type: boolean
          description: >-
            Flag indicating whether to remove certification signatures from the
            merged PDF. If true, all certification signatures will be removed
            from the final merged document.
          default: true
        generateToc:
          type: boolean
          description: >-
            Flag indicating whether to generate a table of contents for the
            merged PDF. If true, a table of contents will be created using the
            input filenames as chapter names.
          default: false
    EditTableOfContentsRequest:
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        bookmarkData:
          type: string
          description: Bookmark structure in JSON format
          example: >-
            [{\"title\":\"Chapter
            1\",\"pageNumber\":1,\"children\":[{\"title\":\"Section
            1.1\",\"pageNumber\":2}]}]
        replaceExisting:
          type: boolean
          description: Whether to replace existing bookmarks or append to them
          example: true
    CropPdfForm:
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        x:
          type: number
          description: The x-coordinate of the top-left corner of the crop area
        'y':
          type: number
          description: The y-coordinate of the top-left corner of the crop area
        width:
          type: number
          description: The width of the crop area
        height:
          type: number
          description: The height of the crop area
    BookletImpositionRequest:
      required:
        - bookletType
        - pageOrientation
        - pagesPerSheet
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        bookletType:
          type: string
          description: The booklet type to create.
          default: BOOKLET
          enum:
            - BOOKLET
            - SIDE_STITCH_BOOKLET
        pagesPerSheet:
          type: integer
          description: The number of pages to fit onto a single sheet in the output PDF.
          format: int32
          enum:
            - 2
            - 4
        addBorder:
          type: boolean
          description: Boolean for if you wish to add border around the pages
        pageOrientation:
          type: string
          description: The page orientation for the output booklet sheets.
          default: LANDSCAPE
          enum:
            - LANDSCAPE
            - PORTRAIT
    PageSizeRequest:
      required:
        - comparator
        - standardPageSize
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        comparator:
          type: string
          description: 'The comparison type, accepts Greater, Equal, Less than'
          enum:
            - Greater
            - Equal
            - Less
        standardPageSize:
          type: string
          description: Standard Page Size
          default: A4
          enum:
            - A0
            - A1
            - A2
            - A3
            - A4
            - A5
            - A6
            - LETTER
            - LEGAL
    PageRotationRequest:
      required:
        - comparator
        - rotation
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        comparator:
          type: string
          description: 'The comparison type, accepts Greater, Equal, Less than'
          enum:
            - Greater
            - Equal
            - Less
        rotation:
          type: integer
          description: Rotation in degrees
          format: int32
          default: 0
    PDFComparisonAndCount:
      required:
        - comparator
        - pageCount
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        comparator:
          type: string
          description: 'The comparison type, accepts Greater, Equal, Less than'
          enum:
            - Greater
            - Equal
            - Less
        pageCount:
          type: integer
          description: Count
          format: int32
          default: 0
    FileSizeRequest:
      required:
        - comparator
        - fileSize
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        comparator:
          type: string
          description: 'The comparison type, accepts Greater, Equal, Less than'
          enum:
            - Greater
            - Equal
            - Less
        fileSize:
          type: integer
          description: Size of the file in bytes
          format: int64
          default: 0
    ContainsTextRequest:
      required:
        - pageNumbers
        - text
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        pageNumbers:
          type: string
          description: >-
            The pages to select, Supports ranges (e.g., '1,3,5-9'), or 'all' or
            functions in the format 'an+b' where 'a' is the multiplier of the
            page number 'n', and 'b' is a constant (e.g., '2n+1', '3n', '6n-5')
          default: all
        text:
          type: string
          description: The text to check for
          default: text
    UrlToPdfRequest:
      required:
        - urlInput
      type: object
      properties:
        urlInput:
          type: string
          description: The input URL to be converted to a PDF file
    PdfToWordRequest:
      required:
        - outputFormat
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        outputFormat:
          type: string
          description: The output Word document format
          enum:
            - doc
            - docx
            - odt
    PdfToTextOrRTFRequest:
      required:
        - outputFormat
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        outputFormat:
          type: string
          description: The output Text or RTF format
          enum:
            - rtf
            - txt
    PdfToPresentationRequest:
      required:
        - outputFormat
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        outputFormat:
          type: string
          description: The output Presentation format
          enum:
            - ppt
            - pptx
            - odp
    PdfToPdfARequest:
      required:
        - outputFormat
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        outputFormat:
          type: string
          description: The output PDF/A type
          enum:
            - pdfa
            - pdfa-1
    ConvertToImageRequest:
      required:
        - colorType
        - dpi
        - imageFormat
        - pageNumbers
        - singleOrMultiple
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        pageNumbers:
          type: string
          description: >-
            The pages to select, Supports ranges (e.g., '1,3,5-9'), or 'all' or
            functions in the format 'an+b' where 'a' is the multiplier of the
            page number 'n', and 'b' is a constant (e.g., '2n+1', '3n', '6n-5')
          default: all
        imageFormat:
          type: string
          description: The output image format
          default: png
          enum:
            - png
            - jpeg
            - jpg
            - gif
            - webp
        singleOrMultiple:
          type: string
          description: >-
            Choose between a single image containing all pages or separate
            images for each page
          default: multiple
          enum:
            - single
            - multiple
        colorType:
          type: string
          description: The color type of the output image(s)
          default: color
          enum:
            - color
            - greyscale
            - blackwhite
        dpi:
          type: integer
          description: The DPI (dots per inch) for the output image(s)
          format: int32
          default: 300
    GeneralFile:
      required:
        - fileInput
      type: object
      properties:
        fileInput:
          type: string
          format: binary
    ConvertToPdfRequest:
      required:
        - autoRotate
        - colorType
        - fileInput
        - fitOption
      type: object
      properties:
        fileInput:
          type: array
          description: The input images to be converted to a PDF file
          items:
            type: string
            format: binary
        fitOption:
          type: string
          description: Option to determine how the image will fit onto the page
          default: fillPage
          enum:
            - fillPage
            - fitDocumentToImage
            - maintainAspectRatio
        colorType:
          type: string
          description: The color type of the output image(s)
          default: color
          enum:
            - color
            - greyscale
            - blackwhite
        autoRotate:
          type: boolean
          description: >-
            Whether to automatically rotate the images to better fit the PDF
            page
          default: false
    HTMLToPdfRequest:
      required:
        - zoom
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        zoom:
          type: number
          description: Zoom level for displaying the website. Default is '1'.
          format: float
          default: 1
    EmlToPdfRequest:
      type: object
      properties:
        fileInput:
          type: string
          format: binary
        fileId:
          type: string
          description: File ID for server-side files (can be used instead of fileInput)
          example: a1b2c3d4-5678-90ab-cdef-ghijklmnopqr
        includeAttachments:
          type: boolean
          description: Include email attachments in the PDF output
          example: false
        maxAttachmentSizeMB:
          maximum: 100
          minimum: 1
          type: integer
          description: >-
            Maximum attachment size in MB to include (default 10MB, range:
            1-100)
          format: int32
          example: 10
        downloadHtml:
          type: boolean
          description: Download HTML intermediate file instead of PDF
          example: false
        includeAllRecipients:
          type: boolean
          description: Include CC and BCC recipients in header (if available)
          example: true
