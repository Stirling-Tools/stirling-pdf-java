/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi;

import static org.openapis.openapi.operations.Operations.RequestOperation;

import jakarta.annotation.Nullable;
import java.lang.Exception;
import org.openapis.openapi.models.components.HandleDataRequest;
import org.openapis.openapi.models.operations.HandleDataRequestBuilder;
import org.openapis.openapi.models.operations.HandleDataResponse;
import org.openapis.openapi.operations.HandleData;
import org.openapis.openapi.utils.Headers;

/**
 * Automated document processing workflows for complex multi-stage business operations.
 * 
 * <p>This endpoint group enables organizations to create sophisticated document processing
 * workflows that combine multiple operations into streamlined, repeatable processes.
 * 
 * <p>Common use cases:
 * • Invoice processing, legal document review, and healthcare records standardization
 * • Government processing, educational content preparation, and publishing automation
 * • Contract lifecycle management and approval processes
 * 
 * <p>Business applications:
 * • Automated compliance reporting, large-scale migration, and quality assurance
 * • Archive preparation, content delivery, and document approval workflows
 * 
 * <p>Operational scenarios:
 * • Scheduled batch processing and event-driven document processing
 * • Multi-department coordination and business system integration
 * 
 * <p>Target users: Business process managers, IT automation specialists, and organizations
 * requiring consistent, repeatable document processing workflows.
 */
public class Pipeline {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncPipeline asyncSDK;

    Pipeline(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncPipeline(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncPipeline async() {
        return asyncSDK;
    }

    /**
     * Execute automated PDF processing pipeline
     * 
     * <p>This endpoint processes multiple PDF files through a configurable pipeline of operations. Users provide files and a JSON configuration defining the sequence of operations to perform. Input:PDF Output:PDF/ZIP Type:MIMO
     * 
     * @return The call builder
     */
    public HandleDataRequestBuilder handleData() {
        return new HandleDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Execute automated PDF processing pipeline
     * 
     * <p>This endpoint processes multiple PDF files through a configurable pipeline of operations. Users provide files and a JSON configuration defining the sequence of operations to perform. Input:PDF Output:PDF/ZIP Type:MIMO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HandleDataResponse handleDataDirect() throws Exception {
        return handleData(null);
    }

    /**
     * Execute automated PDF processing pipeline
     * 
     * <p>This endpoint processes multiple PDF files through a configurable pipeline of operations. Users provide files and a JSON configuration defining the sequence of operations to perform. Input:PDF Output:PDF/ZIP Type:MIMO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HandleDataResponse handleData(@Nullable HandleDataRequest request) throws Exception {
        RequestOperation<HandleDataRequest, HandleDataResponse> operation
              = new HandleData.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
