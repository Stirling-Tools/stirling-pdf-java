/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi;

import static org.openapis.openapi.operations.Operations.AsyncRequestlessOperation;
import static org.openapis.openapi.operations.Operations.AsyncRequestOperation;

import java.util.concurrent.CompletableFuture;
import org.openapis.openapi.models.operations.GetTeamDetailsDataRequest;
import org.openapis.openapi.models.operations.async.GetAccountDataRequestBuilder;
import org.openapis.openapi.models.operations.async.GetAccountDataResponse;
import org.openapis.openapi.models.operations.async.GetAdminSettingsDataRequestBuilder;
import org.openapis.openapi.models.operations.async.GetAdminSettingsDataResponse;
import org.openapis.openapi.models.operations.async.GetAuditDashboardDataRequestBuilder;
import org.openapis.openapi.models.operations.async.GetAuditDashboardDataResponse;
import org.openapis.openapi.models.operations.async.GetDatabaseDataRequestBuilder;
import org.openapis.openapi.models.operations.async.GetDatabaseDataResponse;
import org.openapis.openapi.models.operations.async.GetLoginDataRequestBuilder;
import org.openapis.openapi.models.operations.async.GetLoginDataResponse;
import org.openapis.openapi.models.operations.async.GetTeamDetailsDataRequestBuilder;
import org.openapis.openapi.models.operations.async.GetTeamDetailsDataResponse;
import org.openapis.openapi.models.operations.async.GetTeamsDataRequestBuilder;
import org.openapis.openapi.models.operations.async.GetTeamsDataResponse;
import org.openapis.openapi.operations.GetAccountData;
import org.openapis.openapi.operations.GetAdminSettingsData;
import org.openapis.openapi.operations.GetAuditDashboardData;
import org.openapis.openapi.operations.GetDatabaseData;
import org.openapis.openapi.operations.GetLoginData;
import org.openapis.openapi.operations.GetTeamDetailsData;
import org.openapis.openapi.operations.GetTeamsData;
import org.openapis.openapi.utils.Headers;

/**
 * APIs for React UI data (Proprietary features)
 */
public class AsyncProprietaryUIData {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final ProprietaryUIData syncSDK;

    AsyncProprietaryUIData(ProprietaryUIData syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public ProprietaryUIData sync() {
        return syncSDK;
    }


    /**
     * Get teams list data
     * 
     * @return The async call builder
     */
    public GetTeamsDataRequestBuilder getTeamsData() {
        return new GetTeamsDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Get teams list data
     * 
     * @return CompletableFuture&lt;GetTeamsDataResponse&gt; - The async response
     */
    public CompletableFuture<GetTeamsDataResponse> getTeamsDataDirect() {
        AsyncRequestlessOperation<GetTeamsDataResponse> operation
            = new GetTeamsData.Async(sdkConfiguration, _headers);
        return operation.doRequest()
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get team details data
     * 
     * @return The async call builder
     */
    public GetTeamDetailsDataRequestBuilder getTeamDetailsData() {
        return new GetTeamDetailsDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Get team details data
     * 
     * @param id 
     * @return CompletableFuture&lt;GetTeamDetailsDataResponse&gt; - The async response
     */
    public CompletableFuture<GetTeamDetailsDataResponse> getTeamDetailsData(long id) {
        GetTeamDetailsDataRequest request = new GetTeamDetailsDataRequest(id);
        AsyncRequestOperation<GetTeamDetailsDataRequest, GetTeamDetailsDataResponse> operation
              = new GetTeamDetailsData.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get login page data
     * 
     * @return The async call builder
     */
    public GetLoginDataRequestBuilder getLoginData() {
        return new GetLoginDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Get login page data
     * 
     * @return CompletableFuture&lt;GetLoginDataResponse&gt; - The async response
     */
    public CompletableFuture<GetLoginDataResponse> getLoginDataDirect() {
        AsyncRequestlessOperation<GetLoginDataResponse> operation
            = new GetLoginData.Async(sdkConfiguration, _headers);
        return operation.doRequest()
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get database management data
     * 
     * @return The async call builder
     */
    public GetDatabaseDataRequestBuilder getDatabaseData() {
        return new GetDatabaseDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Get database management data
     * 
     * @return CompletableFuture&lt;GetDatabaseDataResponse&gt; - The async response
     */
    public CompletableFuture<GetDatabaseDataResponse> getDatabaseDataDirect() {
        AsyncRequestlessOperation<GetDatabaseDataResponse> operation
            = new GetDatabaseData.Async(sdkConfiguration, _headers);
        return operation.doRequest()
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get audit dashboard data
     * 
     * @return The async call builder
     */
    public GetAuditDashboardDataRequestBuilder getAuditDashboardData() {
        return new GetAuditDashboardDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Get audit dashboard data
     * 
     * @return CompletableFuture&lt;GetAuditDashboardDataResponse&gt; - The async response
     */
    public CompletableFuture<GetAuditDashboardDataResponse> getAuditDashboardDataDirect() {
        AsyncRequestlessOperation<GetAuditDashboardDataResponse> operation
            = new GetAuditDashboardData.Async(sdkConfiguration, _headers);
        return operation.doRequest()
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get admin settings data
     * 
     * @return The async call builder
     */
    public GetAdminSettingsDataRequestBuilder getAdminSettingsData() {
        return new GetAdminSettingsDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Get admin settings data
     * 
     * @return CompletableFuture&lt;GetAdminSettingsDataResponse&gt; - The async response
     */
    public CompletableFuture<GetAdminSettingsDataResponse> getAdminSettingsDataDirect() {
        AsyncRequestlessOperation<GetAdminSettingsDataResponse> operation
            = new GetAdminSettingsData.Async(sdkConfiguration, _headers);
        return operation.doRequest()
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get account page data
     * 
     * @return The async call builder
     */
    public GetAccountDataRequestBuilder getAccountData() {
        return new GetAccountDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Get account page data
     * 
     * @return CompletableFuture&lt;GetAccountDataResponse&gt; - The async response
     */
    public CompletableFuture<GetAccountDataResponse> getAccountDataDirect() {
        AsyncRequestlessOperation<GetAccountDataResponse> operation
            = new GetAccountData.Async(sdkConfiguration, _headers);
        return operation.doRequest()
            .thenCompose(operation::handleResponse);
    }

}
