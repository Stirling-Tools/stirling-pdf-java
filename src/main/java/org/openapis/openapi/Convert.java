/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi;

import static org.openapis.openapi.operations.Operations.RequestOperation;

import jakarta.annotation.Nullable;
import java.lang.Exception;
import org.openapis.openapi.models.components.ConvertToImageRequest;
import org.openapis.openapi.models.components.ConvertToPdfRequest;
import org.openapis.openapi.models.components.EmlToPdfRequest;
import org.openapis.openapi.models.components.GeneralFile;
import org.openapis.openapi.models.components.HTMLToPdfRequest;
import org.openapis.openapi.models.components.PDFFile;
import org.openapis.openapi.models.components.PDFWithPageNums;
import org.openapis.openapi.models.components.PdfToPdfARequest;
import org.openapis.openapi.models.components.PdfToPresentationRequest;
import org.openapis.openapi.models.components.PdfToTextOrRTFRequest;
import org.openapis.openapi.models.components.PdfToWordRequest;
import org.openapis.openapi.models.components.UrlToPdfRequest;
import org.openapis.openapi.models.operations.ConvertEmlToPdfRequestBuilder;
import org.openapis.openapi.models.operations.ConvertEmlToPdfResponse;
import org.openapis.openapi.models.operations.ConvertToImageRequestBuilder;
import org.openapis.openapi.models.operations.ConvertToImageResponse;
import org.openapis.openapi.models.operations.ConvertToPdfRequestBuilder;
import org.openapis.openapi.models.operations.ConvertToPdfResponse;
import org.openapis.openapi.models.operations.HtmlToPdfRequestBuilder;
import org.openapis.openapi.models.operations.HtmlToPdfResponse;
import org.openapis.openapi.models.operations.MarkdownToPdfRequestBuilder;
import org.openapis.openapi.models.operations.MarkdownToPdfResponse;
import org.openapis.openapi.models.operations.PdfToCsvRequestBuilder;
import org.openapis.openapi.models.operations.PdfToCsvResponse;
import org.openapis.openapi.models.operations.PdfToPdfARequestBuilder;
import org.openapis.openapi.models.operations.PdfToPdfAResponse;
import org.openapis.openapi.models.operations.ProcessFileToPDFRequestBuilder;
import org.openapis.openapi.models.operations.ProcessFileToPDFResponse;
import org.openapis.openapi.models.operations.ProcessPdfToHTMLRequestBuilder;
import org.openapis.openapi.models.operations.ProcessPdfToHTMLResponse;
import org.openapis.openapi.models.operations.ProcessPdfToMarkdownRequestBuilder;
import org.openapis.openapi.models.operations.ProcessPdfToMarkdownResponse;
import org.openapis.openapi.models.operations.ProcessPdfToPresentationRequestBuilder;
import org.openapis.openapi.models.operations.ProcessPdfToPresentationResponse;
import org.openapis.openapi.models.operations.ProcessPdfToRTForTXTRequestBuilder;
import org.openapis.openapi.models.operations.ProcessPdfToRTForTXTResponse;
import org.openapis.openapi.models.operations.ProcessPdfToWordRequestBuilder;
import org.openapis.openapi.models.operations.ProcessPdfToWordResponse;
import org.openapis.openapi.models.operations.ProcessPdfToXMLRequestBuilder;
import org.openapis.openapi.models.operations.ProcessPdfToXMLResponse;
import org.openapis.openapi.models.operations.UrlToPdfRequestBuilder;
import org.openapis.openapi.models.operations.UrlToPdfResponse;
import org.openapis.openapi.operations.ConvertEmlToPdf;
import org.openapis.openapi.operations.ConvertToImage;
import org.openapis.openapi.operations.ConvertToPdf;
import org.openapis.openapi.operations.HtmlToPdf;
import org.openapis.openapi.operations.MarkdownToPdf;
import org.openapis.openapi.operations.PdfToCsv;
import org.openapis.openapi.operations.PdfToPdfA;
import org.openapis.openapi.operations.ProcessFileToPDF;
import org.openapis.openapi.operations.ProcessPdfToHTML;
import org.openapis.openapi.operations.ProcessPdfToMarkdown;
import org.openapis.openapi.operations.ProcessPdfToPresentation;
import org.openapis.openapi.operations.ProcessPdfToRTForTXT;
import org.openapis.openapi.operations.ProcessPdfToWord;
import org.openapis.openapi.operations.ProcessPdfToXML;
import org.openapis.openapi.operations.UrlToPdf;
import org.openapis.openapi.utils.Headers;

/**
 * Convert APIs
 */
public class Convert {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncConvert asyncSDK;

    Convert(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncConvert(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncConvert async() {
        return asyncSDK;
    }

    /**
     * Convert a URL to a PDF
     * 
     * <p>This endpoint fetches content from a URL and converts it to a PDF format. Input:N/A Output:PDF Type:SISO
     * 
     * @return The call builder
     */
    public UrlToPdfRequestBuilder urlToPdf() {
        return new UrlToPdfRequestBuilder(sdkConfiguration);
    }

    /**
     * Convert a URL to a PDF
     * 
     * <p>This endpoint fetches content from a URL and converts it to a PDF format. Input:N/A Output:PDF Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UrlToPdfResponse urlToPdfDirect() throws Exception {
        return urlToPdf(null);
    }

    /**
     * Convert a URL to a PDF
     * 
     * <p>This endpoint fetches content from a URL and converts it to a PDF format. Input:N/A Output:PDF Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UrlToPdfResponse urlToPdf(@Nullable UrlToPdfRequest request) throws Exception {
        RequestOperation<UrlToPdfRequest, UrlToPdfResponse> operation
              = new UrlToPdf.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Convert PDF to XML
     * 
     * <p>This endpoint converts a PDF file to an XML file. Input:PDF Output:XML Type:SISO
     * 
     * @return The call builder
     */
    public ProcessPdfToXMLRequestBuilder processPdfToXML() {
        return new ProcessPdfToXMLRequestBuilder(sdkConfiguration);
    }

    /**
     * Convert PDF to XML
     * 
     * <p>This endpoint converts a PDF file to an XML file. Input:PDF Output:XML Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ProcessPdfToXMLResponse processPdfToXMLDirect() throws Exception {
        return processPdfToXML(null);
    }

    /**
     * Convert PDF to XML
     * 
     * <p>This endpoint converts a PDF file to an XML file. Input:PDF Output:XML Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ProcessPdfToXMLResponse processPdfToXML(@Nullable PDFFile request) throws Exception {
        RequestOperation<PDFFile, ProcessPdfToXMLResponse> operation
              = new ProcessPdfToXML.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Convert PDF to Word document
     * 
     * <p>This endpoint converts a given PDF file to a Word document format. Input:PDF Output:WORD Type:SISO
     * 
     * @return The call builder
     */
    public ProcessPdfToWordRequestBuilder processPdfToWord() {
        return new ProcessPdfToWordRequestBuilder(sdkConfiguration);
    }

    /**
     * Convert PDF to Word document
     * 
     * <p>This endpoint converts a given PDF file to a Word document format. Input:PDF Output:WORD Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ProcessPdfToWordResponse processPdfToWordDirect() throws Exception {
        return processPdfToWord(null);
    }

    /**
     * Convert PDF to Word document
     * 
     * <p>This endpoint converts a given PDF file to a Word document format. Input:PDF Output:WORD Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ProcessPdfToWordResponse processPdfToWord(@Nullable PdfToWordRequest request) throws Exception {
        RequestOperation<PdfToWordRequest, ProcessPdfToWordResponse> operation
              = new ProcessPdfToWord.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Convert PDF to Text or RTF format
     * 
     * <p>This endpoint converts a given PDF file to Text or RTF format. Input:PDF Output:TXT Type:SISO
     * 
     * @return The call builder
     */
    public ProcessPdfToRTForTXTRequestBuilder processPdfToRTForTXT() {
        return new ProcessPdfToRTForTXTRequestBuilder(sdkConfiguration);
    }

    /**
     * Convert PDF to Text or RTF format
     * 
     * <p>This endpoint converts a given PDF file to Text or RTF format. Input:PDF Output:TXT Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ProcessPdfToRTForTXTResponse processPdfToRTForTXTDirect() throws Exception {
        return processPdfToRTForTXT(null);
    }

    /**
     * Convert PDF to Text or RTF format
     * 
     * <p>This endpoint converts a given PDF file to Text or RTF format. Input:PDF Output:TXT Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ProcessPdfToRTForTXTResponse processPdfToRTForTXT(@Nullable PdfToTextOrRTFRequest request) throws Exception {
        RequestOperation<PdfToTextOrRTFRequest, ProcessPdfToRTForTXTResponse> operation
              = new ProcessPdfToRTForTXT.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Convert PDF to Presentation format
     * 
     * <p>This endpoint converts a given PDF file to a Presentation format. Input:PDF Output:PPT Type:SISO
     * 
     * @return The call builder
     */
    public ProcessPdfToPresentationRequestBuilder processPdfToPresentation() {
        return new ProcessPdfToPresentationRequestBuilder(sdkConfiguration);
    }

    /**
     * Convert PDF to Presentation format
     * 
     * <p>This endpoint converts a given PDF file to a Presentation format. Input:PDF Output:PPT Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ProcessPdfToPresentationResponse processPdfToPresentationDirect() throws Exception {
        return processPdfToPresentation(null);
    }

    /**
     * Convert PDF to Presentation format
     * 
     * <p>This endpoint converts a given PDF file to a Presentation format. Input:PDF Output:PPT Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ProcessPdfToPresentationResponse processPdfToPresentation(@Nullable PdfToPresentationRequest request) throws Exception {
        RequestOperation<PdfToPresentationRequest, ProcessPdfToPresentationResponse> operation
              = new ProcessPdfToPresentation.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Convert a PDF to a PDF/A
     * 
     * <p>This endpoint converts a PDF file to a PDF/A file using LibreOffice. PDF/A is a format designed for long-term archiving of digital documents. Input:PDF Output:PDF Type:SISO
     * 
     * @return The call builder
     */
    public PdfToPdfARequestBuilder pdfToPdfA() {
        return new PdfToPdfARequestBuilder(sdkConfiguration);
    }

    /**
     * Convert a PDF to a PDF/A
     * 
     * <p>This endpoint converts a PDF file to a PDF/A file using LibreOffice. PDF/A is a format designed for long-term archiving of digital documents. Input:PDF Output:PDF Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PdfToPdfAResponse pdfToPdfADirect() throws Exception {
        return pdfToPdfA(null);
    }

    /**
     * Convert a PDF to a PDF/A
     * 
     * <p>This endpoint converts a PDF file to a PDF/A file using LibreOffice. PDF/A is a format designed for long-term archiving of digital documents. Input:PDF Output:PDF Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PdfToPdfAResponse pdfToPdfA(@Nullable PdfToPdfARequest request) throws Exception {
        RequestOperation<PdfToPdfARequest, PdfToPdfAResponse> operation
              = new PdfToPdfA.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Convert PDF to Markdown
     * 
     * <p>This endpoint converts a PDF file to Markdown format. Input:PDF Output:Markdown Type:SISO
     * 
     * @return The call builder
     */
    public ProcessPdfToMarkdownRequestBuilder processPdfToMarkdown() {
        return new ProcessPdfToMarkdownRequestBuilder(sdkConfiguration);
    }

    /**
     * Convert PDF to Markdown
     * 
     * <p>This endpoint converts a PDF file to Markdown format. Input:PDF Output:Markdown Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ProcessPdfToMarkdownResponse processPdfToMarkdownDirect() throws Exception {
        return processPdfToMarkdown(null);
    }

    /**
     * Convert PDF to Markdown
     * 
     * <p>This endpoint converts a PDF file to Markdown format. Input:PDF Output:Markdown Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ProcessPdfToMarkdownResponse processPdfToMarkdown(@Nullable PDFFile request) throws Exception {
        RequestOperation<PDFFile, ProcessPdfToMarkdownResponse> operation
              = new ProcessPdfToMarkdown.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Convert PDF to image(s)
     * 
     * <p>This endpoint converts a PDF file to image(s) with the specified image format, color type, and DPI. Users can choose to get a single image or multiple images.  Input:PDF Output:Image Type:SI-Conditional
     * 
     * @return The call builder
     */
    public ConvertToImageRequestBuilder convertToImage() {
        return new ConvertToImageRequestBuilder(sdkConfiguration);
    }

    /**
     * Convert PDF to image(s)
     * 
     * <p>This endpoint converts a PDF file to image(s) with the specified image format, color type, and DPI. Users can choose to get a single image or multiple images.  Input:PDF Output:Image Type:SI-Conditional
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ConvertToImageResponse convertToImageDirect() throws Exception {
        return convertToImage(null);
    }

    /**
     * Convert PDF to image(s)
     * 
     * <p>This endpoint converts a PDF file to image(s) with the specified image format, color type, and DPI. Users can choose to get a single image or multiple images.  Input:PDF Output:Image Type:SI-Conditional
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ConvertToImageResponse convertToImage(@Nullable ConvertToImageRequest request) throws Exception {
        RequestOperation<ConvertToImageRequest, ConvertToImageResponse> operation
              = new ConvertToImage.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Convert PDF to HTML
     * 
     * <p>This endpoint converts a PDF file to HTML format. Input:PDF Output:HTML Type:SISO
     * 
     * @return The call builder
     */
    public ProcessPdfToHTMLRequestBuilder processPdfToHTML() {
        return new ProcessPdfToHTMLRequestBuilder(sdkConfiguration);
    }

    /**
     * Convert PDF to HTML
     * 
     * <p>This endpoint converts a PDF file to HTML format. Input:PDF Output:HTML Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ProcessPdfToHTMLResponse processPdfToHTMLDirect() throws Exception {
        return processPdfToHTML(null);
    }

    /**
     * Convert PDF to HTML
     * 
     * <p>This endpoint converts a PDF file to HTML format. Input:PDF Output:HTML Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ProcessPdfToHTMLResponse processPdfToHTML(@Nullable PDFFile request) throws Exception {
        RequestOperation<PDFFile, ProcessPdfToHTMLResponse> operation
              = new ProcessPdfToHTML.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Extracts a CSV document from a PDF
     * 
     * <p>This operation takes an input PDF file and returns CSV file of whole page. Input:PDF Output:CSV Type:SISO
     * 
     * @return The call builder
     */
    public PdfToCsvRequestBuilder pdfToCsv() {
        return new PdfToCsvRequestBuilder(sdkConfiguration);
    }

    /**
     * Extracts a CSV document from a PDF
     * 
     * <p>This operation takes an input PDF file and returns CSV file of whole page. Input:PDF Output:CSV Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PdfToCsvResponse pdfToCsvDirect() throws Exception {
        return pdfToCsv(null);
    }

    /**
     * Extracts a CSV document from a PDF
     * 
     * <p>This operation takes an input PDF file and returns CSV file of whole page. Input:PDF Output:CSV Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PdfToCsvResponse pdfToCsv(@Nullable PDFWithPageNums request) throws Exception {
        RequestOperation<PDFWithPageNums, PdfToCsvResponse> operation
              = new PdfToCsv.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Convert a Markdown file to PDF
     * 
     * <p>This endpoint takes a Markdown file input, converts it to HTML, and then to PDF format. Input:MARKDOWN Output:PDF Type:SISO
     * 
     * @return The call builder
     */
    public MarkdownToPdfRequestBuilder markdownToPdf() {
        return new MarkdownToPdfRequestBuilder(sdkConfiguration);
    }

    /**
     * Convert a Markdown file to PDF
     * 
     * <p>This endpoint takes a Markdown file input, converts it to HTML, and then to PDF format. Input:MARKDOWN Output:PDF Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarkdownToPdfResponse markdownToPdfDirect() throws Exception {
        return markdownToPdf(null);
    }

    /**
     * Convert a Markdown file to PDF
     * 
     * <p>This endpoint takes a Markdown file input, converts it to HTML, and then to PDF format. Input:MARKDOWN Output:PDF Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MarkdownToPdfResponse markdownToPdf(@Nullable GeneralFile request) throws Exception {
        RequestOperation<GeneralFile, MarkdownToPdfResponse> operation
              = new MarkdownToPdf.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Convert images to a PDF file
     * 
     * <p>This endpoint converts one or more images to a PDF file. Users can specify whether to stretch the images to fit the PDF page, and whether to automatically rotate the images. Input:Image Output:PDF Type:MISO
     * 
     * @return The call builder
     */
    public ConvertToPdfRequestBuilder convertToPdf() {
        return new ConvertToPdfRequestBuilder(sdkConfiguration);
    }

    /**
     * Convert images to a PDF file
     * 
     * <p>This endpoint converts one or more images to a PDF file. Users can specify whether to stretch the images to fit the PDF page, and whether to automatically rotate the images. Input:Image Output:PDF Type:MISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ConvertToPdfResponse convertToPdfDirect() throws Exception {
        return convertToPdf(null);
    }

    /**
     * Convert images to a PDF file
     * 
     * <p>This endpoint converts one or more images to a PDF file. Users can specify whether to stretch the images to fit the PDF page, and whether to automatically rotate the images. Input:Image Output:PDF Type:MISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ConvertToPdfResponse convertToPdf(@Nullable ConvertToPdfRequest request) throws Exception {
        RequestOperation<ConvertToPdfRequest, ConvertToPdfResponse> operation
              = new ConvertToPdf.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Convert an HTML or ZIP (containing HTML and CSS) to PDF
     * 
     * <p>This endpoint takes an HTML or ZIP file input and converts it to a PDF format. Input:HTML Output:PDF Type:SISO
     * 
     * @return The call builder
     */
    public HtmlToPdfRequestBuilder htmlToPdf() {
        return new HtmlToPdfRequestBuilder(sdkConfiguration);
    }

    /**
     * Convert an HTML or ZIP (containing HTML and CSS) to PDF
     * 
     * <p>This endpoint takes an HTML or ZIP file input and converts it to a PDF format. Input:HTML Output:PDF Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HtmlToPdfResponse htmlToPdfDirect() throws Exception {
        return htmlToPdf(null);
    }

    /**
     * Convert an HTML or ZIP (containing HTML and CSS) to PDF
     * 
     * <p>This endpoint takes an HTML or ZIP file input and converts it to a PDF format. Input:HTML Output:PDF Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HtmlToPdfResponse htmlToPdf(@Nullable HTMLToPdfRequest request) throws Exception {
        RequestOperation<HTMLToPdfRequest, HtmlToPdfResponse> operation
              = new HtmlToPdf.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Convert a file to a PDF using LibreOffice
     * 
     * <p>This endpoint converts a given file to a PDF using LibreOffice API  Input:ANY Output:PDF Type:SISO
     * 
     * @return The call builder
     */
    public ProcessFileToPDFRequestBuilder processFileToPDF() {
        return new ProcessFileToPDFRequestBuilder(sdkConfiguration);
    }

    /**
     * Convert a file to a PDF using LibreOffice
     * 
     * <p>This endpoint converts a given file to a PDF using LibreOffice API  Input:ANY Output:PDF Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ProcessFileToPDFResponse processFileToPDFDirect() throws Exception {
        return processFileToPDF(null);
    }

    /**
     * Convert a file to a PDF using LibreOffice
     * 
     * <p>This endpoint converts a given file to a PDF using LibreOffice API  Input:ANY Output:PDF Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ProcessFileToPDFResponse processFileToPDF(@Nullable GeneralFile request) throws Exception {
        RequestOperation<GeneralFile, ProcessFileToPDFResponse> operation
              = new ProcessFileToPDF.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Convert EML to PDF
     * 
     * <p>This endpoint converts EML (email) files to PDF format with extensive customization options. Features include font settings, image constraints, display modes, attachment handling, and HTML debug output. Input: EML file, Output: PDF or HTML file. Type: SISO
     * 
     * @return The call builder
     */
    public ConvertEmlToPdfRequestBuilder convertEmlToPdf() {
        return new ConvertEmlToPdfRequestBuilder(sdkConfiguration);
    }

    /**
     * Convert EML to PDF
     * 
     * <p>This endpoint converts EML (email) files to PDF format with extensive customization options. Features include font settings, image constraints, display modes, attachment handling, and HTML debug output. Input: EML file, Output: PDF or HTML file. Type: SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ConvertEmlToPdfResponse convertEmlToPdfDirect() throws Exception {
        return convertEmlToPdf(null);
    }

    /**
     * Convert EML to PDF
     * 
     * <p>This endpoint converts EML (email) files to PDF format with extensive customization options. Features include font settings, image constraints, display modes, attachment handling, and HTML debug output. Input: EML file, Output: PDF or HTML file. Type: SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ConvertEmlToPdfResponse convertEmlToPdf(@Nullable EmlToPdfRequest request) throws Exception {
        RequestOperation<EmlToPdfRequest, ConvertEmlToPdfResponse> operation
              = new ConvertEmlToPdf.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
