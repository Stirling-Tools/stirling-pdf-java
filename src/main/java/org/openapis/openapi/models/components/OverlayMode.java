/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * OverlayMode
 * 
 * <p>The mode of overlaying: 'SequentialOverlay' for sequential application, 'InterleavedOverlay' for round-robin application, 'FixedRepeatOverlay' for fixed repetition based on provided counts
 */
public enum OverlayMode {
    SEQUENTIAL_OVERLAY("SequentialOverlay"),
    INTERLEAVED_OVERLAY("InterleavedOverlay"),
    FIXED_REPEAT_OVERLAY("FixedRepeatOverlay");

    @JsonValue
    private final String value;

    OverlayMode(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<OverlayMode> fromValue(String value) {
        for (OverlayMode o: OverlayMode.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

