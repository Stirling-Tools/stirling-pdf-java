/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class LoginData {

    private Map<String, String> providerList;


    private String loginMethod;


    private Boolean altLogin;

    @JsonCreator
    public LoginData(
            @Nullable Map<String, String> providerList,
            @Nullable String loginMethod,
            @Nullable Boolean altLogin) {
        this.providerList = providerList;
        this.loginMethod = loginMethod;
        this.altLogin = altLogin;
    }
    
    public LoginData() {
        this(null, null, null);
    }

    public Optional<Map<String, String>> providerList() {
        return Optional.ofNullable(this.providerList);
    }

    public Optional<String> loginMethod() {
        return Optional.ofNullable(this.loginMethod);
    }

    public Optional<Boolean> altLogin() {
        return Optional.ofNullable(this.altLogin);
    }

    public static Builder builder() {
        return new Builder();
    }


    public LoginData withProviderList(@Nullable Map<String, String> providerList) {
        this.providerList = providerList;
        return this;
    }


    public LoginData withLoginMethod(@Nullable String loginMethod) {
        this.loginMethod = loginMethod;
        return this;
    }


    public LoginData withAltLogin(@Nullable Boolean altLogin) {
        this.altLogin = altLogin;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LoginData other = (LoginData) o;
        return 
            Utils.enhancedDeepEquals(this.providerList, other.providerList) &&
            Utils.enhancedDeepEquals(this.loginMethod, other.loginMethod) &&
            Utils.enhancedDeepEquals(this.altLogin, other.altLogin);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            providerList, loginMethod, altLogin);
    }
    
    @Override
    public String toString() {
        return Utils.toString(LoginData.class,
                "providerList", providerList,
                "loginMethod", loginMethod,
                "altLogin", altLogin);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Map<String, String> providerList;

        private String loginMethod;

        private Boolean altLogin;

        private Builder() {
          // force use of static builder() method
        }

        public Builder providerList(@Nullable Map<String, String> providerList) {
            this.providerList = providerList;
            return this;
        }

        public Builder loginMethod(@Nullable String loginMethod) {
            this.loginMethod = loginMethod;
            return this;
        }

        public Builder altLogin(@Nullable Boolean altLogin) {
            this.altLogin = altLogin;
            return this;
        }

        public LoginData build() {
            return new LoginData(
                providerList, loginMethod, altLogin);
        }

    }
}
