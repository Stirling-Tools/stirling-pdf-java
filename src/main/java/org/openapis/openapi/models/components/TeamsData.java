/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class TeamsData {

    private List<TeamWithUserCountDTO> teamsWithCounts;


    private Map<String, OffsetDateTime> teamLastRequest;

    @JsonCreator
    public TeamsData(
            @Nullable List<TeamWithUserCountDTO> teamsWithCounts,
            @Nullable Map<String, OffsetDateTime> teamLastRequest) {
        this.teamsWithCounts = teamsWithCounts;
        this.teamLastRequest = teamLastRequest;
    }
    
    public TeamsData() {
        this(null, null);
    }

    public Optional<List<TeamWithUserCountDTO>> teamsWithCounts() {
        return Optional.ofNullable(this.teamsWithCounts);
    }

    public Optional<Map<String, OffsetDateTime>> teamLastRequest() {
        return Optional.ofNullable(this.teamLastRequest);
    }

    public static Builder builder() {
        return new Builder();
    }


    public TeamsData withTeamsWithCounts(@Nullable List<TeamWithUserCountDTO> teamsWithCounts) {
        this.teamsWithCounts = teamsWithCounts;
        return this;
    }


    public TeamsData withTeamLastRequest(@Nullable Map<String, OffsetDateTime> teamLastRequest) {
        this.teamLastRequest = teamLastRequest;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TeamsData other = (TeamsData) o;
        return 
            Utils.enhancedDeepEquals(this.teamsWithCounts, other.teamsWithCounts) &&
            Utils.enhancedDeepEquals(this.teamLastRequest, other.teamLastRequest);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            teamsWithCounts, teamLastRequest);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TeamsData.class,
                "teamsWithCounts", teamsWithCounts,
                "teamLastRequest", teamLastRequest);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private List<TeamWithUserCountDTO> teamsWithCounts;

        private Map<String, OffsetDateTime> teamLastRequest;

        private Builder() {
          // force use of static builder() method
        }

        public Builder teamsWithCounts(@Nullable List<TeamWithUserCountDTO> teamsWithCounts) {
            this.teamsWithCounts = teamsWithCounts;
            return this;
        }

        public Builder teamLastRequest(@Nullable Map<String, OffsetDateTime> teamLastRequest) {
            this.teamLastRequest = teamLastRequest;
            return this;
        }

        public TeamsData build() {
            return new TeamsData(
                teamsWithCounts, teamLastRequest);
        }

    }
}
