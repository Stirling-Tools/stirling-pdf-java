/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations.async;

import static org.openapis.openapi.operations.Operations.AsyncRequestOperation;

import jakarta.annotation.Nullable;
import java.util.concurrent.CompletableFuture;
import org.openapis.openapi.SDKConfiguration;
import org.openapis.openapi.models.components.AddAttachmentRequest;
import org.openapis.openapi.operations.AddAttachments;
import org.openapis.openapi.utils.Headers;
import org.openapis.openapi.utils.Utils;

public class AddAttachmentsRequestBuilder {
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers();
    private AddAttachmentRequest request;

    public AddAttachmentsRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public AddAttachmentsRequestBuilder request(@Nullable AddAttachmentRequest request) {
        this.request = request;
        return this;
    }

    private AddAttachmentRequest _buildRequest() {
        return this.request;
    }
    
    public AddAttachmentsRequestBuilder header(String name, String value) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(value, "value");
        this._headers.add(name, value);
        return this;
    }

    /**
    * Executes the request and returns the response.
    *
    * @return The response from the server.
    */
    public CompletableFuture<AddAttachmentsResponse> call() {
        AsyncRequestOperation<AddAttachmentRequest, AddAttachmentsResponse> operation
              = new AddAttachments.Async(sdkConfiguration, _headers);
        return operation.doRequest(this._buildRequest())
            .thenCompose(operation::handleResponse);
    }
}
