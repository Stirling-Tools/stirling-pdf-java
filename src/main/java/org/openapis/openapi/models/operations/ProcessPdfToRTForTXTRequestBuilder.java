/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import static org.openapis.openapi.operations.Operations.RequestOperation;

import jakarta.annotation.Nullable;
import java.lang.Exception;
import org.openapis.openapi.SDKConfiguration;
import org.openapis.openapi.models.components.PdfToTextOrRTFRequest;
import org.openapis.openapi.operations.ProcessPdfToRTForTXT;
import org.openapis.openapi.utils.Headers;
import org.openapis.openapi.utils.Utils;

public class ProcessPdfToRTForTXTRequestBuilder {
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers();
    private PdfToTextOrRTFRequest request;

    public ProcessPdfToRTForTXTRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public ProcessPdfToRTForTXTRequestBuilder request(@Nullable PdfToTextOrRTFRequest request) {
        this.request = request;
        return this;
    }

    private PdfToTextOrRTFRequest _buildRequest() {
        return this.request;
    }
    
    public ProcessPdfToRTForTXTRequestBuilder header(String name, String value) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(value, "value");
        this._headers.add(name, value);
        return this;
    }

    /**
    * Executes the request and returns the response.
    *
    * @return The response from the server.
    */
    public ProcessPdfToRTForTXTResponse call() throws Exception {
        RequestOperation<PdfToTextOrRTFRequest, ProcessPdfToRTForTXTResponse> operation
              = new ProcessPdfToRTForTXT.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(this._buildRequest()));
    }
}
