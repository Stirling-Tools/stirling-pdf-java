/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi;

import static org.openapis.openapi.operations.Operations.RequestlessOperation;
import static org.openapis.openapi.operations.Operations.RequestOperation;

import java.lang.Exception;
import org.openapis.openapi.models.operations.GetAccountDataRequestBuilder;
import org.openapis.openapi.models.operations.GetAccountDataResponse;
import org.openapis.openapi.models.operations.GetAdminSettingsDataRequestBuilder;
import org.openapis.openapi.models.operations.GetAdminSettingsDataResponse;
import org.openapis.openapi.models.operations.GetAuditDashboardDataRequestBuilder;
import org.openapis.openapi.models.operations.GetAuditDashboardDataResponse;
import org.openapis.openapi.models.operations.GetDatabaseDataRequestBuilder;
import org.openapis.openapi.models.operations.GetDatabaseDataResponse;
import org.openapis.openapi.models.operations.GetLoginDataRequestBuilder;
import org.openapis.openapi.models.operations.GetLoginDataResponse;
import org.openapis.openapi.models.operations.GetTeamDetailsDataRequest;
import org.openapis.openapi.models.operations.GetTeamDetailsDataRequestBuilder;
import org.openapis.openapi.models.operations.GetTeamDetailsDataResponse;
import org.openapis.openapi.models.operations.GetTeamsDataRequestBuilder;
import org.openapis.openapi.models.operations.GetTeamsDataResponse;
import org.openapis.openapi.operations.GetAccountData;
import org.openapis.openapi.operations.GetAdminSettingsData;
import org.openapis.openapi.operations.GetAuditDashboardData;
import org.openapis.openapi.operations.GetDatabaseData;
import org.openapis.openapi.operations.GetLoginData;
import org.openapis.openapi.operations.GetTeamDetailsData;
import org.openapis.openapi.operations.GetTeamsData;
import org.openapis.openapi.utils.Headers;

/**
 * APIs for React UI data (Proprietary features)
 */
public class ProprietaryUIData {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncProprietaryUIData asyncSDK;

    ProprietaryUIData(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncProprietaryUIData(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncProprietaryUIData async() {
        return asyncSDK;
    }

    /**
     * Get teams list data
     * 
     * @return The call builder
     */
    public GetTeamsDataRequestBuilder getTeamsData() {
        return new GetTeamsDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Get teams list data
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTeamsDataResponse getTeamsDataDirect() throws Exception {
        RequestlessOperation<GetTeamsDataResponse> operation
            = new GetTeamsData.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest());
    }

    /**
     * Get team details data
     * 
     * @return The call builder
     */
    public GetTeamDetailsDataRequestBuilder getTeamDetailsData() {
        return new GetTeamDetailsDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Get team details data
     * 
     * @param id 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTeamDetailsDataResponse getTeamDetailsData(long id) throws Exception {
        GetTeamDetailsDataRequest request = new GetTeamDetailsDataRequest(id);
        RequestOperation<GetTeamDetailsDataRequest, GetTeamDetailsDataResponse> operation
              = new GetTeamDetailsData.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get login page data
     * 
     * @return The call builder
     */
    public GetLoginDataRequestBuilder getLoginData() {
        return new GetLoginDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Get login page data
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetLoginDataResponse getLoginDataDirect() throws Exception {
        RequestlessOperation<GetLoginDataResponse> operation
            = new GetLoginData.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest());
    }

    /**
     * Get database management data
     * 
     * @return The call builder
     */
    public GetDatabaseDataRequestBuilder getDatabaseData() {
        return new GetDatabaseDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Get database management data
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetDatabaseDataResponse getDatabaseDataDirect() throws Exception {
        RequestlessOperation<GetDatabaseDataResponse> operation
            = new GetDatabaseData.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest());
    }

    /**
     * Get audit dashboard data
     * 
     * @return The call builder
     */
    public GetAuditDashboardDataRequestBuilder getAuditDashboardData() {
        return new GetAuditDashboardDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Get audit dashboard data
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAuditDashboardDataResponse getAuditDashboardDataDirect() throws Exception {
        RequestlessOperation<GetAuditDashboardDataResponse> operation
            = new GetAuditDashboardData.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest());
    }

    /**
     * Get admin settings data
     * 
     * @return The call builder
     */
    public GetAdminSettingsDataRequestBuilder getAdminSettingsData() {
        return new GetAdminSettingsDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Get admin settings data
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAdminSettingsDataResponse getAdminSettingsDataDirect() throws Exception {
        RequestlessOperation<GetAdminSettingsDataResponse> operation
            = new GetAdminSettingsData.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest());
    }

    /**
     * Get account page data
     * 
     * @return The call builder
     */
    public GetAccountDataRequestBuilder getAccountData() {
        return new GetAccountDataRequestBuilder(sdkConfiguration);
    }

    /**
     * Get account page data
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAccountDataResponse getAccountDataDirect() throws Exception {
        RequestlessOperation<GetAccountDataResponse> operation
            = new GetAccountData.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest());
    }

}
