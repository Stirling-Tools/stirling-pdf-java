/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi;

import static org.openapis.openapi.operations.Operations.RequestOperation;

import jakarta.annotation.Nullable;
import java.lang.Exception;
import org.openapis.openapi.models.components.PDFFile;
import org.openapis.openapi.models.operations.GetAnnotationInfoRequestBuilder;
import org.openapis.openapi.models.operations.GetAnnotationInfoResponse;
import org.openapis.openapi.models.operations.GetBasicInfoRequestBuilder;
import org.openapis.openapi.models.operations.GetBasicInfoResponse;
import org.openapis.openapi.models.operations.GetDocumentPropertiesRequestBuilder;
import org.openapis.openapi.models.operations.GetDocumentPropertiesResponse;
import org.openapis.openapi.models.operations.GetFontInfoRequestBuilder;
import org.openapis.openapi.models.operations.GetFontInfoResponse;
import org.openapis.openapi.models.operations.GetFormFieldsRequestBuilder;
import org.openapis.openapi.models.operations.GetFormFieldsResponse;
import org.openapis.openapi.models.operations.GetPageCountRequestBuilder;
import org.openapis.openapi.models.operations.GetPageCountResponse;
import org.openapis.openapi.models.operations.GetPageDimensionsRequestBuilder;
import org.openapis.openapi.models.operations.GetPageDimensionsResponse;
import org.openapis.openapi.models.operations.GetSecurityInfoRequestBuilder;
import org.openapis.openapi.models.operations.GetSecurityInfoResponse;
import org.openapis.openapi.operations.GetAnnotationInfo;
import org.openapis.openapi.operations.GetBasicInfo;
import org.openapis.openapi.operations.GetDocumentProperties;
import org.openapis.openapi.operations.GetFontInfo;
import org.openapis.openapi.operations.GetFormFields;
import org.openapis.openapi.operations.GetPageCount;
import org.openapis.openapi.operations.GetPageDimensions;
import org.openapis.openapi.operations.GetSecurityInfo;
import org.openapis.openapi.utils.Headers;

/**
 * Document analysis and information extraction services for content intelligence and insights.
 * 
 * <p>This endpoint group provides analytical capabilities to understand document structure,
 * extract information, and generate insights from PDF content for automated processing.
 * 
 * <p>Common use cases:
 * • Document inventory management and content audit for compliance verification
 * • Quality assurance workflows and business intelligence analytics
 * • Migration planning, accessibility evaluation, and document forensics
 * 
 * <p>Business applications:
 * • Legal discovery, financial document review, and healthcare records analysis
 * • Academic research, government processing, and publishing optimization
 * 
 * <p>Operational scenarios:
 * • Large-scale profiling, migration assessment, and performance optimization
 * • Automated quality control and content strategy development
 * 
 * <p>Target users: Data analysts, QA teams, administrators, and business intelligence
 * professionals requiring detailed document insights.
 */
public class Analysis {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncAnalysis asyncSDK;

    Analysis(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncAnalysis(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncAnalysis async() {
        return asyncSDK;
    }

    /**
     * Get security information
     * 
     * <p>Returns encryption and permission details. Input:PDF Output:JSON Type:SISO
     * 
     * @return The call builder
     */
    public GetSecurityInfoRequestBuilder getSecurityInfo() {
        return new GetSecurityInfoRequestBuilder(sdkConfiguration);
    }

    /**
     * Get security information
     * 
     * <p>Returns encryption and permission details. Input:PDF Output:JSON Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetSecurityInfoResponse getSecurityInfoDirect() throws Exception {
        return getSecurityInfo(null);
    }

    /**
     * Get security information
     * 
     * <p>Returns encryption and permission details. Input:PDF Output:JSON Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetSecurityInfoResponse getSecurityInfo(@Nullable PDFFile request) throws Exception {
        RequestOperation<PDFFile, GetSecurityInfoResponse> operation
              = new GetSecurityInfo.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get page dimensions for all pages
     * 
     * <p>Returns width and height of each page. Input:PDF Output:JSON Type:SISO
     * 
     * @return The call builder
     */
    public GetPageDimensionsRequestBuilder getPageDimensions() {
        return new GetPageDimensionsRequestBuilder(sdkConfiguration);
    }

    /**
     * Get page dimensions for all pages
     * 
     * <p>Returns width and height of each page. Input:PDF Output:JSON Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetPageDimensionsResponse getPageDimensionsDirect() throws Exception {
        return getPageDimensions(null);
    }

    /**
     * Get page dimensions for all pages
     * 
     * <p>Returns width and height of each page. Input:PDF Output:JSON Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetPageDimensionsResponse getPageDimensions(@Nullable PDFFile request) throws Exception {
        RequestOperation<PDFFile, GetPageDimensionsResponse> operation
              = new GetPageDimensions.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get PDF page count
     * 
     * <p>Returns total number of pages in PDF. Input:PDF Output:JSON Type:SISO
     * 
     * @return The call builder
     */
    public GetPageCountRequestBuilder getPageCount() {
        return new GetPageCountRequestBuilder(sdkConfiguration);
    }

    /**
     * Get PDF page count
     * 
     * <p>Returns total number of pages in PDF. Input:PDF Output:JSON Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetPageCountResponse getPageCountDirect() throws Exception {
        return getPageCount(null);
    }

    /**
     * Get PDF page count
     * 
     * <p>Returns total number of pages in PDF. Input:PDF Output:JSON Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetPageCountResponse getPageCount(@Nullable PDFFile request) throws Exception {
        RequestOperation<PDFFile, GetPageCountResponse> operation
              = new GetPageCount.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get form field information
     * 
     * <p>Returns count and details of form fields. Input:PDF Output:JSON Type:SISO
     * 
     * @return The call builder
     */
    public GetFormFieldsRequestBuilder getFormFields() {
        return new GetFormFieldsRequestBuilder(sdkConfiguration);
    }

    /**
     * Get form field information
     * 
     * <p>Returns count and details of form fields. Input:PDF Output:JSON Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetFormFieldsResponse getFormFieldsDirect() throws Exception {
        return getFormFields(null);
    }

    /**
     * Get form field information
     * 
     * <p>Returns count and details of form fields. Input:PDF Output:JSON Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetFormFieldsResponse getFormFields(@Nullable PDFFile request) throws Exception {
        RequestOperation<PDFFile, GetFormFieldsResponse> operation
              = new GetFormFields.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get font information
     * 
     * <p>Returns list of fonts used in the document. Input:PDF Output:JSON Type:SISO
     * 
     * @return The call builder
     */
    public GetFontInfoRequestBuilder getFontInfo() {
        return new GetFontInfoRequestBuilder(sdkConfiguration);
    }

    /**
     * Get font information
     * 
     * <p>Returns list of fonts used in the document. Input:PDF Output:JSON Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetFontInfoResponse getFontInfoDirect() throws Exception {
        return getFontInfo(null);
    }

    /**
     * Get font information
     * 
     * <p>Returns list of fonts used in the document. Input:PDF Output:JSON Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetFontInfoResponse getFontInfo(@Nullable PDFFile request) throws Exception {
        RequestOperation<PDFFile, GetFontInfoResponse> operation
              = new GetFontInfo.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get PDF document properties
     * 
     * <p>Returns title, author, subject, etc. Input:PDF Output:JSON Type:SISO
     * 
     * @return The call builder
     */
    public GetDocumentPropertiesRequestBuilder getDocumentProperties() {
        return new GetDocumentPropertiesRequestBuilder(sdkConfiguration);
    }

    /**
     * Get PDF document properties
     * 
     * <p>Returns title, author, subject, etc. Input:PDF Output:JSON Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetDocumentPropertiesResponse getDocumentPropertiesDirect() throws Exception {
        return getDocumentProperties(null);
    }

    /**
     * Get PDF document properties
     * 
     * <p>Returns title, author, subject, etc. Input:PDF Output:JSON Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetDocumentPropertiesResponse getDocumentProperties(@Nullable PDFFile request) throws Exception {
        RequestOperation<PDFFile, GetDocumentPropertiesResponse> operation
              = new GetDocumentProperties.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get basic PDF information
     * 
     * <p>Returns page count, version, file size. Input:PDF Output:JSON Type:SISO
     * 
     * @return The call builder
     */
    public GetBasicInfoRequestBuilder getBasicInfo() {
        return new GetBasicInfoRequestBuilder(sdkConfiguration);
    }

    /**
     * Get basic PDF information
     * 
     * <p>Returns page count, version, file size. Input:PDF Output:JSON Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetBasicInfoResponse getBasicInfoDirect() throws Exception {
        return getBasicInfo(null);
    }

    /**
     * Get basic PDF information
     * 
     * <p>Returns page count, version, file size. Input:PDF Output:JSON Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetBasicInfoResponse getBasicInfo(@Nullable PDFFile request) throws Exception {
        RequestOperation<PDFFile, GetBasicInfoResponse> operation
              = new GetBasicInfo.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get annotation information
     * 
     * <p>Returns count and types of annotations. Input:PDF Output:JSON Type:SISO
     * 
     * @return The call builder
     */
    public GetAnnotationInfoRequestBuilder getAnnotationInfo() {
        return new GetAnnotationInfoRequestBuilder(sdkConfiguration);
    }

    /**
     * Get annotation information
     * 
     * <p>Returns count and types of annotations. Input:PDF Output:JSON Type:SISO
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAnnotationInfoResponse getAnnotationInfoDirect() throws Exception {
        return getAnnotationInfo(null);
    }

    /**
     * Get annotation information
     * 
     * <p>Returns count and types of annotations. Input:PDF Output:JSON Type:SISO
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetAnnotationInfoResponse getAnnotationInfo(@Nullable PDFFile request) throws Exception {
        RequestOperation<PDFFile, GetAnnotationInfoResponse> operation
              = new GetAnnotationInfo.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
